name: Build and Publish Debian Package

on: push

jobs:
  build-debs:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 构建 Debian 包
      - uses: jtdor/build-deb-action@v1
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage-opts: --build=binary --no-sign

      # 上传构建的 Debian 包到 GitHub Packages
      - name: Upload Debian Package to GitHub Packages
        uses: actions/upload-artifact@v4
        with:
          path: debian/artifacts/
          name: faultinjectorllm_0.1.0

      - name: Publish to GitHub Packages
        run: |
          # 设置 GitHub Packages 的认证
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # 打包 Debian 文件并推送到 GitHub Packages
          DEB_FILE=$(ls debian/artifacts/*.deb)
          PACKAGE_NAME="faultinjectorllm"
          VERSION="0.1.0"
          IMAGE_NAME="ghcr.io/jiahuann/smart_fault_injector_llm/$PACKAGE_NAME:$VERSION"

          # 创建一个临时 Dockerfile
          echo "FROM scratch" > Dockerfile
          echo "COPY $DEB_FILE /" >> Dockerfile

          # 构建并推送 Docker 镜像
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME