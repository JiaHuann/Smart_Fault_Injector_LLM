/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/af_inet.c$inet_autobind$['-EAGAIN']$The function returns -EAGAIN if the socket's protocol get_port function fails, indicating that the port allocation was unsuccessful.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/af_inet.c$__inet_listen_sk$['-EINVAL']$The function returns -EINVAL if the socket is not in a state that allows it to be moved to listening state, such as if it's already connected or in an invalid state.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/af_inet.c$inet_create$['-EINVAL', '-ESOCKTNOSUPPORT', '-EPROTONOSUPPORT', '-EPERM', '-ENOMEM']$The function returns -EINVAL if the protocol is out of range, -ESOCKTNOSUPPORT if the socket type is not supported, -EPROTONOSUPPORT if the protocol is not supported, -EPERM if the user lacks the necessary permissions, and -ENOMEM if memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/af_inet.c$inet_bind_sk$['-EINVAL', '-EACCES']$The function returns -EINVAL if the address length is too short or the address family is not supported, and -EACCES if the user lacks the necessary permissions to bind to the specified port.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/af_inet.c$__inet_bind$['-EAFNOSUPPORT', '-EADDRNOTAVAIL', '-EACCES', '-EINVAL']$The function returns -EAFNOSUPPORT if the address family is not supported, -EADDRNOTAVAIL if the address is not valid or not local, -EACCES if the user lacks the necessary permissions, and -EINVAL if the socket is already bound or in an invalid state.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.c$ip_clear_mutable_options$['-EINVAL']$Returns -EINVAL if the option length is invalid, indicating a malformed IP option.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.c$ah_output$['-ENOMEM', '-EINVAL', '-EINPROGRESS', '-ENOSPC']$Returns -ENOMEM if memory allocation fails, -EINVAL for invalid mutable options, -EINPROGRESS if the operation is in progress, and -ENOSPC if there's no space for the operation.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.c$ah_input$['-ENOMEM', '-EBADMSG', '-EINPROGRESS']$Returns -ENOMEM if memory allocation fails, -EBADMSG if the ICV (Integrity Check Value) does not match, indicating a possible tampering, and -EINPROGRESS if the operation is in progress.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.c$ah_init_state$['-ENOMEM', '-EINVAL']$Returns -ENOMEM if memory allocation fails and -EINVAL if the initialization of cryptographic operations fails or if the state is incompatible with AH.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.mod.c$xfrm4_protocol_register$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the protocol is already registered or if the registration structure is invalid. -ENOMEM is returned if there is insufficient memory to allocate resources for the protocol registration.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.mod.c$xfrm4_protocol_deregister$['-EINVAL']$-EINVAL is returned if the protocol is not registered or if the deregistration structure is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.mod.c$crypto_alloc_ahash$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the algorithm name is invalid or if the algorithm is not found. -ENOMEM is returned if there is insufficient memory to allocate the handle.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ah4.mod.c$crypto_ahash_setkey$['-EINVAL']$-EINVAL is returned if the key is invalid or if the key length is not supported by the algorithm.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/arp.c$arp_mc_map$['-EINVAL']$Returns -EINVAL if the device type is not supported for multicast mapping.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/arp.c$arp_constructor$['-EINVAL']$Returns -EINVAL if the in-device structure cannot be found for the given device, indicating an invalid device or configuration.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/arp.c$arp_process$['NET_RX_DROP']$Returns NET_RX_DROP if the ARP packet is invalid, the device is not ARP'able, or if the packet is to be ignored based on its type or content.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/bpf_tcp_ca.c$bpf_tcp_ca_init$['-EINVAL']$Returns -EINVAL if the BTF type for 'sock' or 'tcp_sock' cannot be found, indicating an invalid type ID.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/bpf_tcp_ca.c$bpf_tcp_ca_btf_struct_access$['-EACCES']$Returns -EACCES if the access is not supported or if the write access goes beyond the member of tcp_sock, indicating an access violation.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/bpf_tcp_ca.c$bpf_tcp_ca_check_member$['-ENOTSUPP']$Returns -ENOTSUPP if the member is found in the list of unsupported operations, indicating that the operation is not supported.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/bpf_tcp_ca.c$bpf_tcp_ca_init_member$['-EINVAL']$Returns -EINVAL if the flags contain unsupported values or if the name copying fails, indicating invalid initialization parameters.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/cipso_ipv4.c$cipso_v4_cache_init$['-ENOMEM']$The function attempts to allocate memory for the CIPSO cache using kcalloc. If the memory allocation fails, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/cipso_ipv4.c$cipso_v4_cache_add$['-ENOMEM', '-EPERM']$The function attempts to allocate memory for a new cache entry and its key. If either memory allocation fails, it returns -ENOMEM. Additionally, if the cache is not enabled or the bucket size is less than or equal to 0, it returns -EPERM.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/cipso_ipv4.c$cipso_v4_doi_add$['-EINVAL', '-EEXIST']$The function checks the DOI definition for validity and if it finds any issues, it returns -EINVAL. If a DOI with the same value already exists, it returns -EEXIST.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/datagram.c$__ip4_datagram_connect$['-EINVAL', '-EAFNOSUPPORT', '-ENETUNREACH', '-EACCES']$The function returns -EINVAL if the address length is too short, -EAFNOSUPPORT if the address family is not supported, -ENETUNREACH if the network is unreachable, and -EACCES if the socket is not allowed to broadcast.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/datagram.c$ip4_datagram_connect$['-EINVAL', '-EAFNOSUPPORT', '-ENETUNREACH', '-EACCES']$The function inherits the error codes from __ip4_datagram_connect, as it directly returns the result of that function. Therefore, it can return -EINVAL, -EAFNOSUPPORT, -ENETUNREACH, and -EACCES for the same reasons as __ip4_datagram_connect.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/devinet.c$inetdev_init$['-ENOMEM']$The function can return -ENOMEM if memory allocation fails for the in_device structure or its ARP parameters.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/devinet.c$inet_insert_ifa$['-EEXIST', '-EINVAL']$The function can return -EEXIST if the IP address already exists in the list and -EINVAL if the scope value is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/devinet.c$inet_rtm_newaddr$['-EEXIST', '-EINVAL', '-ENOBUFS']$The function can return -EEXIST if the address already exists, -EINVAL for invalid parameters, and -ENOBUFS if memory allocation fails for the new address structure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.c$esp_output_tail$['-ENOMEM', '-EINPROGRESS', '-ENOSPC']$Memory allocation failure, operation in progress, or no space available for the operation.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.c$esp_output_tail_tcp$['-EOPNOTSUPP', '-EINPROGRESS']$Operation not supported or operation in progress.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.c$esp_output_encap$['-EMSGSIZE', '-EOPNOTSUPP']$Message too large for the operation or operation not supported.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.c$esp_output_head$['-ENOMEM']$Memory allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.mod.c$crypto_aead_setkey$['-EINVAL', '-ENOMEM']$The function can return -EINVAL if the key is invalid or -ENOMEM if there is not enough memory to set the key.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.mod.c$crypto_aead_setauthsize$['-EINVAL']$The function can return -EINVAL if the authentication tag size is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4.mod.c$crypto_aead_encrypt$['-EINPROGRESS', '-EBUSY']$The function can return -EINPROGRESS if the operation is asynchronous and not yet complete, or -EBUSY if the operation is already in progress.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.c$esp4_gro_receive$['-EINPROGRESS']$Returns -EINPROGRESS to indicate that the packet processing is ongoing and the packet should not be freed yet. This is a common pattern in network stack code to handle asynchronous operations.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.c$esp4_gso_segment$['-EINVAL']$Returns -EINVAL if the packet does not meet the requirements for GSO segmentation, such as missing necessary headers or incorrect protocol types.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.c$esp_input_tail$['-EINVAL']$Returns -EINVAL if the packet lacks necessary data for processing, such as missing ESP headers or insufficient data for decryption.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.c$esp_xmit$['-EINVAL', '-ENOMEM']$Returns -EINVAL for invalid packet configurations or missing offload capabilities, and -ENOMEM if there's a failure in allocating necessary resources for packet processing.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.mod.c$xfrm_register_type_offload$['-EIO', '-ENOMEM']$The function may fail due to I/O errors or insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.mod.c$inet_add_offload$['-EIO', '-ENOMEM']$Potential failure due to I/O errors or insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/esp4_offload.mod.c$xfrm_unregister_type_offload$['-EIO']$The function may fail due to I/O errors.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_frontend.c$fib4_rules_init$['-ENOMEM']$Returns -ENOMEM if memory allocation for the FIB tables fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_frontend.c$fib_unmerge$['-ENOMEM']$Returns -ENOMEM if memory allocation for the new unmerged FIB table fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_frontend.c$__fib_validate_source$['-EINVAL', '-EXDEV']$Returns -EINVAL if the source address is invalid or the packet is not accepted locally. Returns -EXDEV if the packet fails the reverse path forwarding (RPF) check.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_notifier.c$call_fib4_notifier$['-EINVAL', '-ENOMEM']$The function could return -EINVAL if the notifier block or info is invalid, and -ENOMEM if there is a memory allocation failure during the notifier call.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_notifier.c$call_fib4_notifiers$['-EINVAL', '-ENOMEM']$The function could return -EINVAL if the network namespace or info is invalid, and -ENOMEM if there is a memory allocation failure during the notifiers call.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_notifier.c$fib4_notifier_init$['-ENOMEM']$The function could return -ENOMEM if there is a memory allocation failure during the registration of the fib notifier operations.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_rules.c$fib4_rule_configure$['-EINVAL', '-ENOBUFS']$-EINVAL is returned if the DSCP field is invalid or if the tos field contains invalid bits. -ENOBUFS is returned if there is no available table ID for a new table.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_rules.c$fib4_rule_action$['-ENETUNREACH', '-EACCES', '-EINVAL', '-EAGAIN']$-ENETUNREACH is returned if the action is FR_ACT_UNREACHABLE. -EACCES is returned if the action is FR_ACT_PROHIBIT. -EINVAL is returned for unsupported actions like FR_ACT_BLACKHOLE. -EAGAIN is returned if the table lookup fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_rules.c$__fib_lookup$['-ESRCH', '-ENETUNREACH']$-ESRCH is returned if no route is found. -ENETUNREACH is returned if the lookup fails and no route is found after converting -ESRCH to -ENETUNREACH.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_semantics.c$fib_nh_common_init$['-ENOMEM', '-EINVAL']$Returns -ENOMEM if memory allocation for per-CPU routing table entries fails. Returns -EINVAL if encapsulation type is not specified or if building the encapsulation state fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_semantics.c$fib_nh_init$['-EINVAL']$Returns -EINVAL if the initialization of the common nexthop fields fails, which could be due to invalid encapsulation or gateway configuration.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_semantics.c$fib_check_nh$['-EINVAL', '-ENETDOWN', '-ENODEV']$Returns -EINVAL if the nexthop configuration is invalid, such as incorrect flags or gateway scope. Returns -ENETDOWN if the device is not up. Returns -ENODEV if the device does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_trie.c$tnode_alloc$['-ENOMEM']$The function may fail to allocate memory, returning -ENOMEM if the allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_trie.c$leaf_new$['-ENOMEM']$The function may fail to allocate memory for the new leaf node, returning -ENOMEM if the allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fib_trie.c$fib_insert_node$['-ENOMEM']$The function may fail to allocate memory for the new node or tnode, returning -ENOMEM if the allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_bpf.c$bpf_skb_set_fou_encap$['-EINVAL']$The function returns -EINVAL if the encapsulation parameters (encap) are NULL or if the tunnel info (info) is NULL or not in transmit mode (IP_TUNNEL_INFO_TX).,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_bpf.c$bpf_skb_get_fou_encap$['-EINVAL']$The function returns -EINVAL if the tunnel info (info) is NULL, indicating that the packet does not have valid tunnel information.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_core.c$fou_udp_recv$['1', '0']$Returns 1 if the 'fou' structure is not found, indicating a processing error. Returns 0 to indicate successful packet drop after processing.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_core.c$gue_udp_recv$['1', '0']$Returns 1 if the 'fou' structure is not found, indicating a processing error. Returns 0 to indicate successful packet drop after processing.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_core.c$fou_create$['-EINVAL', '-ENOMEM']$Returns -EINVAL if the configuration type is invalid. Returns -ENOMEM if memory allocation for the FOU structure fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_core.c$fou_add_to_port_list$['-EALREADY']$Returns -EALREADY if a FOU port with the same configuration already exists, preventing duplicate entries.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou.mod.c$udp_sock_create4$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the provided parameters are invalid. -ENOMEM is returned if there is not enough memory to allocate the socket.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou.mod.c$udp_sock_create6$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the provided parameters are invalid. -ENOMEM is returned if there is not enough memory to allocate the socket.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou.mod.c$setup_udp_tunnel_sock$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the provided parameters are invalid. -ENOMEM is returned if there is not enough memory to allocate the socket or related structures.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_nl.c$fou_nl_add_doit$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the input parameters are invalid. -ENOMEM is returned if memory allocation fails during the configuration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_nl.c$fou_nl_del_doit$['-EINVAL']$-EINVAL is returned if the specified tunnel does not exist or if the input parameters are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/fou_nl.c$fou_nl_get_doit$['-EINVAL']$-EINVAL is returned if the specified tunnel does not exist or if the input parameters are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_demux.c$gre_add_protocol$['-EINVAL', '-EBUSY']$-EINVAL is returned if the version is out of range. -EBUSY is returned if the protocol slot for the specified version is already occupied.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_demux.c$gre_del_protocol$['-EINVAL', '-EBUSY']$-EINVAL is returned if the version is out of range. -EBUSY is returned if the protocol slot for the specified version is not occupied by the specified protocol.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_demux.c$gre_parse_header$['-EINVAL']$-EINVAL is returned if the packet does not contain a valid GRE header or if the checksum validation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_demux.c$gre_err$['-EINVAL', '-EPROTONOSUPPORT']$-EINVAL is returned if the version is out of range. -EPROTONOSUPPORT is returned if there is no error handler for the specified protocol version.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre.mod.c$gre_add_protocol$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the protocol handler is already registered or if the protocol number is invalid. -ENOMEM is returned if memory allocation fails during the registration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre.mod.c$gre_del_protocol$['-EINVAL']$-EINVAL is returned if the protocol handler is not registered or if the protocol number is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre.mod.c$gre_parse_header$['-EINVAL']$-EINVAL is returned if the packet does not contain a valid GRE header or if the header is malformed.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_offload.c$gre_gso_segment$['-EINVAL']$The function returns -EINVAL if the packet is not encapsulated, if the tunnel header length is less than the size of the GRE base header, or if the packet cannot be pulled to the required length.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_offload.c$gre_gro_receive$[]$This function does not return error codes directly but may cause packets to be dropped or flushed based on conditions such as invalid GRE headers or mismatched tunnel parameters.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/gre_offload.c$gre_gro_complete$['-ENOENT']$The function returns -ENOENT if it cannot find a GRO complete callback for the GRE packet's protocol type.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/icmp.c$icmp_global_allow$['false']$Returns false if the token bucket is empty and cannot be refilled, indicating the rate limit has been reached.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/icmp.c$icmpv4_global_allow$['false']$Returns false if the ICMP message is not allowed due to rate limiting or type-specific restrictions.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/icmp.c$icmpv4_xrlim_allow$['false']$Returns false if the ICMP message is not allowed due to rate limiting for the destination host.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/icmp.c$icmp_unreach$['SKB_DROP_REASON_IP_INHDR', 'SKB_DROP_REASON_UNHANDLED_PROTO', 'SKB_DROP_REASON_INVALID_PROTO']$Returns specific error codes for malformed headers, unhandled protocol types, and invalid protocol operations, indicating why the packet was dropped.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/igmp.c$igmpv3_send_report$['-ENOMEM']$Memory allocation failure when creating the report packet.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/igmp.c$igmp_send_report$['-ENOMEM']$Memory allocation failure when creating the report packet.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/igmp.c$ip_mc_add_src$['-ENOBUFS']$Memory allocation failure when adding a new source filter.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/igmp.c$ip_mc_del_src$['-ESRCH']$Source filter not found or count wrong.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_connection_sock.c$inet_csk_get_port$['-EADDRINUSE']$The function returns -EADDRINUSE if the specified port is already in use and cannot be reused, or if no available port can be found within the specified range.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_connection_sock.c$inet_csk_wait_for_connect$['-EINVAL', '-EAGAIN']$The function returns -EINVAL if the socket is not in the LISTEN state, indicating an invalid operation. It returns -EAGAIN if the operation would block and the socket is in non-blocking mode.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_connection_sock.c$inet_csk_accept$['-EINVAL', '-EAGAIN']$The function returns -EINVAL if the socket is not in the LISTEN state, indicating an invalid operation. It returns -EAGAIN if there are no pending connections and the socket is in non-blocking mode.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.c$inet_diag_lock_handler$['-ENOENT']$The function returns -ENOENT if the protocol is out of range or if the handler for the protocol is not loaded.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.c$inet_diag_msg_attrs_fill$['1']$The function returns 1 (which is treated as an error in this context) if it fails to add any attribute to the sk_buff, indicating a failure in the process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.c$inet_diag_parse_attrs$['-EINVAL']$The function returns -EINVAL if it encounters an attribute with an invalid type or length, indicating a parsing error.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.c$inet_sk_diag_fill$['-EMSGSIZE']$The function returns -EMSGSIZE if it fails to add any information to the sk_buff due to insufficient space, indicating a failure in the process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.mod.c$inet_diag_register$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the provided diag handler is invalid or already registered. -ENOMEM is returned if memory allocation fails during the registration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.mod.c$inet_diag_unregister$['-EINVAL']$-EINVAL is returned if the provided diag handler is invalid or not currently registered.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_diag.mod.c$inet_diag_find_one_icsk$['-ENOENT']$-ENOENT is returned if no socket matching the provided criteria is found.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_fragment.c$inet_frags_init$['-ENOMEM']$Returns -ENOMEM if kmem_cache_create fails to allocate memory for the fragments cache.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_fragment.c$fqdir_init$['-ENOMEM']$Returns -ENOMEM if kzalloc fails to allocate memory for the fqdir structure or if rhashtable_init fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_fragment.c$inet_frag_queue_insert$['IPFRAG_OVERLAP', 'IPFRAG_DUP']$Returns IPFRAG_OVERLAP if the new fragment overlaps with existing fragments and IPFRAG_DUP if it is a duplicate of an existing fragment.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_hashtables.c$__inet_inherit_port$['-ENOENT', '-ENOMEM']$The function returns -ENOENT if the parent socket's bind bucket is not found, indicating a missing resource. It returns -ENOMEM if it fails to allocate memory for a new bind bucket, indicating a resource allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_hashtables.c$inet_bind_bucket_create$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the new bind bucket, indicating a resource allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_hashtables.c$inet_bind2_bucket_create$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the new bind2 bucket, indicating a resource allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inetpeer.c$inet_getpeer$['NULL']$The function returns NULL if it fails to find or create an inet_peer entry, indicating a failure in retrieving or allocating the peer information.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inetpeer.c$inet_peer_xrlim_allow$['false']$The function returns false if the rate limit is exceeded, indicating that the operation should be rate-limited.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inetpeer.c$inet_peer_gc$[]$The function does not return any error values as it performs its operations internally without indicating success or failure to the caller.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_alloc$['NULL']$Returns NULL if the maximum number of timewait buckets is reached or if memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_bind_unhash$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_kill$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_free$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_put$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_hashdance$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_deschedule_put$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$__inet_twsk_schedule$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/inet_timewait_sock.c$inet_twsk_purge$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.c$ipcomp_tunnel_attach$['-EINVAL']$Returns -EINVAL if the tunnel creation fails, indicating an invalid argument was provided or the tunnel could not be initialized.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.c$ipcomp4_init_state$['-EINVAL']$Returns -EINVAL if the initialization of the IPComp state fails, which could be due to an unsupported XFRM mode or failure in attaching the tunnel.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.c$ipcomp4_init$['-EAGAIN']$Returns -EAGAIN if the registration of the xfrm type or protocol fails, indicating a temporary failure that might be resolved by trying again.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.mod.c$xfrm4_protocol_register$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the protocol handler is already registered or if the protocol number is invalid. -ENOMEM is returned if memory allocation fails during the registration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.mod.c$xfrm_state_alloc$['-ENOMEM']$-ENOMEM is returned if memory allocation fails for the new xfrm state structure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipcomp.mod.c$xfrm_init_state$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the security parameters are invalid. -ENOMEM is returned if memory allocation fails during the initialization process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipconfig.c$ic_open_devs$['-ENOMEM', '-ENODEV']$-ENOMEM is returned if memory allocation for a new ic_device structure fails. -ENODEV is returned if no suitable network devices are found or if the specified device (if any) is not found.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipconfig.c$ic_setup_if$['-1']$-1 is returned if any of the ioctl calls to set the interface address, netmask, or broadcast address fail. This indicates a failure in configuring the network interface.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipconfig.c$ic_setup_routes$['-1']$-1 is returned if the gateway is not on the directly connected network or if the ioctl call to add the default route fails. This indicates a failure in setting up the network routes.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_forward.c$ip_forward$['NET_RX_DROP']$The function returns NET_RX_DROP when it encounters conditions that prevent packet forwarding, such as incorrect packet type, LRO, XFRM policy failure, TTL expiration, or MTU exceedance.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_forward.c$ip_forward_finish$[]$The function does not return any error values as per the provided code. It returns 0 on successful completion of packet forwarding.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_forward.c$ip_exceeds_mtu$['true', 'false']$The function returns true if the packet exceeds the MTU and the DF flag is set, or if the original fragment exceeds the MTU. It returns false otherwise, including cases where the packet does not exceed the MTU or conditions like GSO and ignore_df are met.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_fragment.c$ip_frag_reasm$['-EINVAL', '-ENOMEM']$-EINVAL is returned if the ECN value is invalid or if the packet is oversized. -ENOMEM is returned if there is not enough memory to complete the reassembly process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_fragment.c$ip_frag_queue$['-ENOENT', '-EINVAL', '-ENOMEM']$-ENOENT is returned if the fragment queue is not found. -EINVAL is returned for invalid fragment offsets or if the fragment is a duplicate. -ENOMEM is returned if there is not enough memory to add the fragment to the queue.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_fragment.c$ip_defrag$['-ENOMEM']$-ENOMEM is returned if there is not enough memory to create a new queue header or to process the fragment.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$ipgre_err$['-ENOENT']$Returns -ENOENT if the tunnel corresponding to the error message cannot be found.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$gre_err$[]$This function does not return any error codes directly but processes errors internally and may drop packets.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$erspan_rcv$['PACKET_REJECT']$Returns PACKET_REJECT if the packet cannot be processed due to invalid headers or if the tunnel lookup fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$__ipgre_rcv$['PACKET_REJECT', 'PACKET_NEXT']$Returns PACKET_REJECT if the packet cannot be processed due to invalid headers or if the tunnel lookup fails. Returns PACKET_NEXT if the packet should be processed by another protocol handler.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$ipgre_rcv$['PACKET_REJECT']$Returns PACKET_REJECT if the packet cannot be processed due to invalid headers or if the tunnel lookup fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$gre_rcv$[]$This function does not return any error codes directly but processes packets and may drop them if they are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.c$gre_fill_metadata_dst$['-EINVAL', 'PTR_ERR']$Returns -EINVAL if the address family is not supported. Returns PTR_ERR if the route lookup fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.mod.c$ip_tunnel_newlink$['-ENOMEM', '-EINVAL']$-ENOMEM is returned if memory allocation fails during the setup of the new link. -EINVAL is returned if the provided parameters are invalid or if the tunnel setup cannot proceed due to invalid configurations.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.mod.c$ip_tunnel_dellink$['-ENOENT']$-ENOENT is returned if the specified tunnel link does not exist or cannot be found for deletion.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_gre.mod.c$ip_tunnel_change_mtu$['-EINVAL']$-EINVAL is returned if the new MTU value is invalid or outside the acceptable range for the tunnel.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_input.c$ip_rcv_options$['true']$Returns true if the packet should be dropped due to invalid IP options or source routing restrictions.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_input.c$ip_rcv_finish_core$['NET_RX_DROP']$Returns NET_RX_DROP if the packet is to be dropped due to routing errors, invalid multicast/broadcast, or other policy checks.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_input.c$ip_rcv_core$['NULL']$Returns NULL if the packet is to be dropped due to invalid IP header, checksum errors, or if the packet is too small.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.c$ipip_err$['-ENOENT']$Returns -ENOENT when the tunnel corresponding to the packet cannot be found, indicating the tunnel does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.c$ipip_tunnel_rcv$['-1']$Returns -1 when the packet does not match any known tunnel, indicating a processing failure.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.c$ipip_tunnel_ctl$['-EINVAL']$Returns -EINVAL when the provided tunnel parameters are invalid, such as incorrect IP version or protocol.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.mod.c$ip_tunnel_init$['-ENOMEM']$Memory allocation failure during the initialization of the IP tunnel device.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.mod.c$ip_tunnel_newlink$['-EINVAL']$Invalid parameters provided for the new IP tunnel link creation.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.mod.c$ip_tunnel_dellink$['-ENOENT']$The specified IP tunnel link does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipip.mod.c$ip_tunnel_changelink$['-EINVAL']$Invalid parameters provided for changing the IP tunnel link.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr_base.c$mr_table_alloc$['-ENOMEM', '-EINVAL']$-ENOMEM is returned if memory allocation fails. -EINVAL could be returned if the initialization of the hash table fails, though the specific error code is not directly shown in the provided code snippet, it's a common error for such operations.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr_base.c$mr_fill_mroute$['-ENOENT', '-EMSGSIZE']$-ENOENT is returned if the cache is unresolved. -EMSGSIZE is returned if there is not enough space in the sk_buff to add the required attributes.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr_base.c$mr_table_dump$['-EMSGSIZE']$-EMSGSIZE is returned if there is not enough space in the sk_buff to add the required attributes during the dump operation.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr.c$vif_add$['-EADDRINUSE', '-ENOBUFS', '-EADDRNOTAVAIL']$The function can fail if the virtual interface is already in use, if there is no buffer space available, or if the local address is not available.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr.c$ipmr_mfc_add$['-ENFILE', '-EINVAL', '-ENOMEM']$The function can fail if the maximum number of virtual interfaces is exceeded, if the multicast group address is invalid, or if there is no memory available for the new cache entry.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ipmr.c$ipmr_cache_unresolved$['-ENOBUFS']$The function can fail if there is no buffer space available to queue the packet.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_options.c$__ip_options_echo$['-EINVAL']$The function returns -EINVAL when the IP options are malformed or when the specified offsets within the options exceed the option length, indicating an invalid option format.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_options.c$__ip_options_compile$['-EINVAL']$The function returns -EINVAL when it encounters invalid IP options, such as incorrect option lengths, unsupported option types, or when the options do not comply with the expected format.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_options.c$ip_options_get$['-ENOMEM', '-EFAULT', '-EINVAL']$The function returns -ENOMEM if memory allocation fails, -EFAULT if copying options data from user space fails, and -EINVAL if the compiled options are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_output.c$ip_finish_output2$['-ENOMEM']$The function can return -ENOMEM if skb_expand_head fails to allocate memory for expanding the sk_buff headroom.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_output.c$ip_finish_output_gso$['-ENOMEM']$The function can return -ENOMEM if skb_gso_segment fails to allocate memory for segmenting the sk_buff.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_output.c$ip_do_fragment$['-EMSGSIZE']$The function can return -EMSGSIZE if the packet is too large to be fragmented according to the MTU and the DF (Don't Fragment) bit is set.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_sockglue.c$ip_cmsg_send$['-EINVAL']$The function returns -EINVAL when the control message is invalid, such as when the message length is incorrect or the message type is not supported.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_sockglue.c$ip_ra_control$['-EINVAL', '-ENOMEM', '-EADDRINUSE', '-ENOBUFS']$The function returns -EINVAL if the socket type is not SOCK_RAW or if the protocol is IPPROTO_RAW. It returns -ENOMEM if memory allocation fails. -EADDRINUSE is returned if the socket is already registered for Router Alert options. -ENOBUFS is returned if there is no buffer space available.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_sockglue.c$ip_setsockopt$['-EINVAL', '-ENOPROTOOPT', '-ENOBUFS', '-EADDRNOTAVAIL', '-EPERM']$The function returns -EINVAL for invalid arguments or options. -ENOPROTOOPT is returned for unsupported options. -ENOBUFS is returned when there is no buffer space available. -EADDRNOTAVAIL is returned for invalid addresses. -EPERM is returned when the operation is not permitted due to insufficient privileges.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.c$__ip_tunnel_create$['-E2BIG', '-ENOMEM']$The function can return -E2BIG if the name of the tunnel device is too long or if the kind of the tunnel device exceeds the allowed length. It returns -ENOMEM if the allocation of the network device fails due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.c$ip_tunnel_encap_add_ops$['-ERANGE']$The function returns -ERANGE if the operation number exceeds the maximum allowed number of encapsulation operations, indicating that the operation cannot be added.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.c$ip_tunnel_encap_del_ops$['-ERANGE']$The function returns -ERANGE if the operation number exceeds the maximum allowed number of encapsulation operations, indicating that the operation cannot be removed.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.c$ip_tunnel_encap_setup$['-EINVAL']$The function returns -EINVAL if the encapsulation header length is negative, indicating an invalid configuration.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel_core.c$__iptunnel_pull_header$['-ENOMEM']$The function may return -ENOMEM if there is not enough memory to pull the required header from the sk_buff.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel_core.c$iptunnel_handle_offloads$['-ENOMEM']$The function may return -ENOMEM if it fails to clone the sk_buff header for GSO offloading.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel_core.c$iptunnel_pmtud_build_icmp$['-EINVAL']$The function may return -EINVAL if the sk_buff does not contain enough data to build the ICMP message or if the sk_buff cannot be trimmed to the required size.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.mod.c$ip_tunnel_newlink$['-ENOMEM', '-EINVAL']$-ENOMEM could be returned if memory allocation fails during the setup process. -EINVAL might be returned if the provided parameters are invalid or incompatible with the tunnel configuration.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.mod.c$ip_tunnel_changelink$['-EINVAL']$-EINVAL could be returned if the new configuration parameters are invalid or if the tunnel does not support the requested changes.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_tunnel.mod.c$ip_tunnel_init$['-ENOMEM']$-ENOMEM might be returned if there is insufficient memory to allocate the required data structures for the tunnel device.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.c$vti_input$['-EINVAL']$Returns -EINVAL if the tunnel lookup fails or if the packet does not pass the XFRM policy check.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.c$vti_rcv_cb$['-EINVAL', '-EPERM']$Returns -EINVAL if the inner mode cannot be determined for the packet. Returns -EPERM if the packet does not pass the XFRM policy check.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.c$vti_tunnel_ctl$['-EINVAL']$Returns -EINVAL if the tunnel parameters are invalid, such as incorrect IP version or protocol.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.mod.c$ip_tunnel_init$['-ENOMEM']$The function may fail to allocate memory for the tunnel device structures, leading to an -ENOMEM error.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.mod.c$ip_tunnel_newlink$['-EINVAL', '-ENOMEM']$Invalid configuration parameters can lead to an -EINVAL error. Additionally, memory allocation failures for new link structures can result in an -ENOMEM error.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.mod.c$ip_tunnel_changelink$['-EINVAL']$Attempting to change the tunnel link with invalid parameters can cause the function to return an -EINVAL error.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ip_vti.mod.c$ip_tunnel_dellink$['-ENOENT']$If the specified tunnel link does not exist, the function will return an -ENOENT error.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/metrics.c$ip_metrics_convert$['-EINVAL']$The function returns -EINVAL when it encounters an invalid metric type, an unknown TCP congestion algorithm, an invalid attribute in metrics, or an unknown flag set in the feature mask in metrics attribute.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/metrics.c$ip_fib_metrics_init$['-ENOMEM', '-EINVAL']$The function returns -ENOMEM if memory allocation fails. It also returns -EINVAL if ip_metrics_convert fails, which happens when it encounters invalid metrics.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/netfilter.c$ip_route_me_harder$['-ENOMEM', '-EIO']$-ENOMEM is returned if there's not enough memory to expand the skb headroom. -EIO could be returned if there's an error in the routing process, such as failing to find a route or encountering an error with the destination.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/netfilter.c$nf_ip_route$['-EIO']$-EIO could be returned if there's an error in the routing process, such as failing to find a route or encountering an error with the destination.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/netlink.c$rtm_getroute_parse_ip_proto$['-EOPNOTSUPP']$Returns -EOPNOTSUPP if the IP protocol specified in the attribute is not supported for the given address family.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_single_info_init$['-ENOMEM']$Memory allocation failure for info->nh.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_mpath_info_init$['-ENOMEM']$Memory allocation failure for info->nh_grp.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_res_table_info_init$['-ENOMEM']$Memory allocation failure for info->nh_res_table.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_grp_info_init$['-EINVAL']$Invalid nexthop group type.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_info_init$['-EINVAL']$Invalid nexthop type.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$call_nexthop_notifiers$['-EINVAL']$Failed to initialize nexthop notifier info.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$nh_notifier_res_bucket_info_init$['-ENOMEM']$Memory allocation failure for info->nh_res_bucket.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$__call_nexthop_res_bucket_notifiers$['-EINVAL']$Failed to initialize nexthop resilient bucket info.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$call_nexthop_res_bucket_notifiers$['-EINVAL']$Invalid nexthop or bucket index.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$call_nexthop_res_table_notifiers$['-EINVAL']$Failed to initialize nexthop resilient table info.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/nexthop.c$call_nexthop_notifier$['-EINVAL']$Failed to initialize nexthop notifier info.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ping.c$ping_get_port$['-EADDRINUSE']$The function returns -EADDRINUSE if the requested port is already in use by another socket, indicating that the port cannot be assigned due to a conflict.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ping.c$ping_init_sock$['-EACCES']$The function returns -EACCES if the current effective group ID is not within the allowed range for ping operations, indicating that the user does not have the necessary permissions to create a ping socket.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ping.c$ping_check_bind_addr$['-EINVAL', '-EAFNOSUPPORT', '-EADDRNOTAVAIL', '-ENODEV']$The function returns -EINVAL if the address length is invalid, -EAFNOSUPPORT if the address family is not supported, -EADDRNOTAVAIL if the address is not available for binding, and -ENODEV if the network device associated with the address does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/ping.c$ping_bind$['-EINVAL', '-EADDRINUSE']$The function returns -EINVAL if the socket is already bound or if the address is invalid, and -EADDRINUSE if the requested port is already in use by another socket.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/proc.c$ip_proc_init_net$['-ENOMEM']$The function may return -ENOMEM if memory allocation for proc entries fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/proc.c$ip_proc_exit_net$[]$This function does not return any error values as it is used for cleanup and does not perform operations that can fail.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/proc.c$ip_misc_proc_init$[]$This function does not return any error values directly. It registers the network proc subsystem and its success or failure is determined by the registration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/protocol.c$inet_add_protocol$['-1']$Returns -1 if the protocol slot is already occupied, indicating a failure to add the protocol.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/protocol.c$inet_add_offload$['-1']$Returns -1 if the offload slot is already occupied, indicating a failure to add the offload handler.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/protocol.c$inet_del_protocol$['-1']$Returns -1 if the protocol handler to be removed is not found in the array, indicating a failure to delete the protocol.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/protocol.c$inet_del_offload$['-1']$Returns -1 if the offload handler to be removed is not found in the array, indicating a failure to delete the offload handler.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw.c$raw_send_hdrinc$['-EMSGSIZE', '-EINVAL']$-EMSGSIZE is returned if the packet size exceeds the MTU of the outgoing interface. -EINVAL is returned if the packet size is smaller than the size of an IP header or if the IP header length is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw.c$raw_rcv_skb$['NET_RX_DROP']$NET_RX_DROP is returned if the packet cannot be queued to the socket's receive queue, indicating that the packet should be dropped.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw.c$raw_sendmsg$['-EMSGSIZE', '-EOPNOTSUPP', '-EINVAL', '-EAFNOSUPPORT', '-EDESTADDRREQ']$-EMSGSIZE is returned if the message size exceeds the maximum allowed. -EOPNOTSUPP is returned for unsupported operations. -EINVAL is returned for invalid arguments. -EAFNOSUPPORT is returned if the address family is not supported. -EDESTADDRREQ is returned if the destination address is required but not provided.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.c$raw_get_hashinfo$['-EINVAL']$Returns -EINVAL if the socket family is neither AF_INET nor AF_INET6, indicating an invalid address family.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.c$raw_sock_get$['-ENOENT']$Returns -ENOENT if no matching socket is found after searching through the hash table, indicating the socket does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.c$raw_diag_dump_one$['-ENOMEM', '-EINVAL', '-ENOENT']$Returns -ENOMEM if memory allocation for the netlink message fails, -EINVAL if the socket retrieval fails, and -ENOENT if the socket does not exist.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.c$raw_diag_destroy$['-EINVAL', '-ENOENT']$Returns -EINVAL if the socket retrieval fails and -ENOENT if the socket does not exist, indicating failure in the destruction process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.mod.c$inet_diag_register$['-ENOMEM']$The function may fail with -ENOMEM if there is insufficient memory available for the registration process.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.mod.c$inet_diag_unregister$['-EINVAL']$The function may fail with -EINVAL if the module was not previously registered or if the unregistration process encounters an invalid state.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/raw_diag.mod.c$netlink_unicast$['-EINVAL', '-ENOBUFS']$The function may fail with -EINVAL if the provided socket or message is invalid, and with -ENOBUFS if there is no buffer space available for the message.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/route.c$ip_route_input_slow$['-EINVAL', '-ENETUNREACH']$The function returns -EINVAL for invalid input parameters such as multicast or loopback addresses when not allowed. It returns -ENETUNREACH when no route is found for the destination address.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/route.c$ip_route_output_key_hash_rcu$['-EINVAL', '-ENETUNREACH']$The function returns -EINVAL for invalid source addresses (multicast, loopback, or zero addresses). It returns -ENETUNREACH when no route is found for the destination address.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/route.c$__mkroute_output$['-EINVAL', '-ENOBUFS']$The function returns -EINVAL for invalid destination addresses (loopback addresses when not allowed). It returns -ENOBUFS when memory allocation for the route cache entry fails.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/syncookies.c$cookie_v4_check$['-EINVAL']$The function returns -EINVAL if the syncookie check fails, indicating that the incoming packet does not contain a valid syncookie or if there's an issue with the TCP options.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/syncookies.c$cookie_timestamp_decode$['false']$The function returns false if it decodes a TCP option that is disabled on the host, indicating that the host does not support the decoded TCP options.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/syncookies.c$cookie_tcp_check$['-EINVAL']$The function returns -EINVAL if the syncookie validation fails or if there's an issue with the TCP options, indicating that the syncookie is invalid or the TCP options are not supported.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/sysctl_net_ipv4.c$ipv4_local_port_range$['-EINVAL']$Returns -EINVAL if the new port range is invalid, specifically if the upper limit is smaller than the lower limit or if the lower limit is below the privileged port limit.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/sysctl_net_ipv4.c$ipv4_privileged_ports$['-EINVAL']$Returns -EINVAL if the new privileged port range overlaps with the local port range.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/sysctl_net_ipv4.c$ipv4_ping_group_range$['-EINVAL']$Returns -EINVAL if the new ping group range is invalid, specifically if the high value is less than the low value or if either value is not a valid group ID.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/sysctl_net_ipv4.c$proc_tcp_available_congestion_control$['-ENOMEM']$Returns -ENOMEM if memory allocation fails for storing the list of available TCP congestion control algorithms.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/sysctl_net_ipv4.c$proc_allowed_congestion_control$['-ENOMEM']$Returns -ENOMEM if memory allocation fails for storing the list of allowed TCP congestion control algorithms.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/tcp_ao.c$tcp_ao_calc_traffic_key$['1']$The function returns 1 if any of the cryptographic operations (initialization, update, or finalization) fail. This indicates a failure in the cryptographic process, possibly due to invalid input or a problem with the cryptographic backend.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/tcp_ao.c$tcp_ao_ignore_icmp$['false']$The function returns false if the ICMP message should not be ignored, indicating that the message is relevant to the TCP connection and should be processed further.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/tcp_ao.c$tcp_v4_ao_calc_key$['-EOPNOTSUPP']$The function returns -EOPNOTSUPP if the operation is not supported, which could happen if the cryptographic backend does not support the required operations or if the input parameters are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/net/ipv4/tcp_ao.c$tcp_ao_hash_skb$['1']$The function returns 1 if the hash computation fails, which could be due to a failure in setting up the hash context, performing the hash operation, or finalizing the hash. This indicates a problem with the cryptographic process or invalid input data.,
