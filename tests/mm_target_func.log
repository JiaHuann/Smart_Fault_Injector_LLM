/home/server/Desktop/kernel/linux-6.8.1/mm/backing-dev.c$read_ahead_kb_store$['-EINVAL']$The function returns -EINVAL if the conversion of the input string to an unsigned long fails, indicating an invalid input.,
/home/server/Desktop/kernel/linux-6.8.1/mm/backing-dev.c$min_ratio_store$['-EINVAL']$The function returns -EINVAL if the conversion of the input string to an unsigned integer fails, indicating an invalid input.,
/home/server/Desktop/kernel/linux-6.8.1/mm/backing-dev.c$max_ratio_store$['-EINVAL']$The function returns -EINVAL if the conversion of the input string to an unsigned integer fails, indicating an invalid input.,
/home/server/Desktop/kernel/linux-6.8.1/mm/balloon_compaction.c$balloon_page_list_enqueue$[]$This function does not return any error values; it returns the number of pages that were enqueued.,
/home/server/Desktop/kernel/linux-6.8.1/mm/balloon_compaction.c$balloon_page_list_dequeue$[]$This function does not return any error values; it returns the number of pages that were dequeued.,
/home/server/Desktop/kernel/linux-6.8.1/mm/balloon_compaction.c$balloon_page_alloc$['NULL']$This function returns NULL if page allocation fails, which does not match the specified criteria of error returns being only -XXX or true/false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/balloon_compaction.c$balloon_page_dequeue$['NULL']$This function returns NULL if no page was dequeued, which does not match the specified criteria of error returns being only -XXX or true/false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/bootmem_info.c$register_page_bootmem_info_section$['-EIO', '-ENOMEM']$The function does not explicitly handle errors, but it is part of the kernel memory management system, which commonly returns -EIO for I/O errors and -ENOMEM for memory allocation failures.,
/home/server/Desktop/kernel/linux-6.8.1/mm/bootmem_info.c$register_page_bootmem_info_node$['-EIO', '-ENOMEM']$Similar to register_page_bootmem_info_section, this function is part of the kernel memory management system and could encounter I/O errors (-EIO) or memory allocation failures (-ENOMEM).,
/home/server/Desktop/kernel/linux-6.8.1/mm/bootmem_info.c$get_page_bootmem$['-EIO', '-ENOMEM']$Although get_page_bootmem does not directly handle errors, it operates within the context of memory management, where I/O errors and memory allocation failures are common.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma.c$cma_init_reserved_mem$['-ENOSPC', '-EINVAL']$Returns -ENOSPC if there are no slots available for CMA reserved regions, and -EINVAL for invalid input parameters.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma.c$cma_declare_contiguous_nid$['-ENOSPC', '-EINVAL', '-EBUSY', '-ENOMEM']$Returns -ENOSPC if there are no slots available for CMA reserved regions, -EINVAL for invalid input parameters, -EBUSY if the region is already reserved, and -ENOMEM if memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma.c$cma_alloc$['-ENOMEM']$Returns -ENOMEM if the allocation fails due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_debug.c$cma_alloc_mem$['-ENOMEM']$The function returns -ENOMEM if the allocation of memory fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_debug.c$cma_free_mem$['0']$The function returns 0 indicating success, and there are no error conditions specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_debug.c$cma_alloc_write$['-ENOMEM']$The function calls cma_alloc_mem which can return -ENOMEM if the allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_sysfs.c$cma_sysfs_init$['-ENOMEM']$The function returns -ENOMEM if memory allocation fails for cma_kobj_root or cma_kobj.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_sysfs.c$alloc_pages_success_show$['true', 'false']$The function returns true or false based on the success of sysfs_emit, which writes to the buffer.,
/home/server/Desktop/kernel/linux-6.8.1/mm/cma_sysfs.c$alloc_pages_fail_show$['true', 'false']$The function returns true or false based on the success of sysfs_emit, which writes to the buffer.,
/home/server/Desktop/kernel/linux-6.8.1/mm/compaction.c$release_freepages$['0']$The function iterates through a list of free pages, deletes them from the list, and frees them. It returns the highest PFN encountered during the process. There are no error conditions specified in the function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/compaction.c$split_map_pages$['0']$The function iterates through a list of pages, splits large pages if they are of a higher order, and maps them. It does not explicitly handle error conditions.,
/home/server/Desktop/kernel/linux-6.8.1/mm/compaction.c$PageMovable$['false', 'true']$The function checks if a page is locked and if it is marked as movable. If the page is movable, it returns true; otherwise, it returns false. There are no error conditions specified in the function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug.c$dump_page$['-EIO']$The function checks if the page is poisoned and prints a warning if it is, but it does not return any error code directly. However, the context suggests potential I/O errors, hence -EIO is listed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug.c$dump_vma$['-ENOMEM']$The function does not explicitly return errors, but given its interaction with memory areas, it is plausible that it could encounter memory allocation issues, hence -ENOMEM is listed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug.c$dump_mm$['-ENOMEM']$Similar to dump_vma, this function interacts with memory management structures and could potentially encounter memory allocation issues, hence -ENOMEM is listed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_alloc.c$early_debug_pagealloc$['-EINVAL']$The function kstrtobool can return -EINVAL if the conversion of the string to a boolean fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_alloc.c$debug_guardpage_minorder_setup$['-EINVAL']$The function kstrtoul can return -EINVAL if the conversion of the string to an unsigned long fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_alloc.c$__set_page_guard$['false']$The function returns false if the order is greater than or equal to debug_guardpage_minorder(), indicating that the guard page cannot be set.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_set$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_mod$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_mod_and_test$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_mod_and_return$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_mod_unless$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_freeze$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_page_ref.c$__page_ref_unfreeze$[]$The function does not return any error values.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_vm_pgtable.c$pte_basic_tests$['-EIO', '-ENOMEM']$These errors are common in memory management operations and are used to indicate I/O errors or out of memory conditions.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_vm_pgtable.c$pmd_basic_tests$['-EIO', '-ENOMEM']$Similar to pte_basic_tests, these errors are used to indicate I/O errors or out of memory conditions in larger page operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/debug_vm_pgtable.c$pud_basic_tests$['-EIO', '-ENOMEM']$These errors are used to indicate I/O errors or out of memory conditions in even larger page operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool.c$dma_pool_create$['NULL']$The function returns NULL if the device is not valid, alignment is not a power of two, size is invalid, or memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool.c$pool_alloc_page$['NULL']$The function returns NULL if memory allocation for the page structure or DMA coherent memory fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool.c$dma_pool_alloc$['NULL']$The function returns NULL if no free block is available and allocation of a new page fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool_test.c$dmapool_test_alloc$['-ENOMEM']$The function returns -ENOMEM when memory allocation from the DMA pool fails, indicating insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool_test.c$dmapool_test_block$['-ENOMEM']$The function returns -ENOMEM if memory allocation for the dma_pool_pair array fails or if the DMA pool creation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/dmapool_test.c$dmapool_checks$['-ENOMEM', '-EIO']$The function returns -ENOMEM if device registration fails, and -EIO if setting the DMA mask fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/early_ioremap.c$__early_ioremap$['NULL']$The function returns NULL if it fails to find a slot or if the size or address is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/early_ioremap.c$early_iounmap$[]$The function does not return any error values; it simply unmaps the memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/early_ioremap.c$early_ioremap$['NULL']$The function returns NULL if the underlying __early_ioremap call fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/early_ioremap.c$early_memremap$['NULL']$The function returns NULL if the underlying __early_ioremap call fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fadvise.c$generic_fadvise$['-ESPIPE', '-EINVAL']$The function returns -ESPIPE if the file is a FIFO, and -EINVAL if the mapping is invalid or the length is negative.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fadvise.c$vfs_fadvise$['-EINVAL']$The function returns -EINVAL if the advice is not recognized.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fadvise.c$ksys_fadvise64_64$['-EBADF']$The function returns -EBADF if the file descriptor is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fail_page_alloc.c$setup_fail_page_alloc$['-EINVAL', '-ENOMEM']$The function setup_fault_attr can return -EINVAL if the input string is invalid, and -ENOMEM if memory allocation fails during the setup process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fail_page_alloc.c$fail_page_alloc_debugfs$['-ENOMEM']$The function fault_create_debugfs_attr can return NULL if memory allocation fails, which would lead to an implicit -ENOMEM error when trying to create debugfs entries.,
/home/server/Desktop/kernel/linux-6.8.1/mm/fail_page_alloc.c$__should_fail_alloc_page$['true', 'false']$The function returns true if a failure should be injected, and false otherwise. It does not return any error codes directly but rather a boolean result.,
/home/server/Desktop/kernel/linux-6.8.1/mm/failslab.c$__should_failslab$['false']$The function returns false if any of the conditions for fault injection are not met, indicating that the slab allocation should not fail.,
/home/server/Desktop/kernel/linux-6.8.1/mm/failslab.c$setup_failslab$['-EINVAL']$The function returns -EINVAL if the setup_fault_attr function fails to initialize the fault attribute correctly.,
/home/server/Desktop/kernel/linux-6.8.1/mm/failslab.c$failslab_debugfs_init$['-ENOMEM']$The function returns -ENOMEM if the fault_create_debugfs_attr function fails to create the debugfs directory due to memory allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/filemap.c$filemap_fdatawrite_wbc$['-ENOSPC', '-EIO']$Check for outstanding write errors,
/home/server/Desktop/kernel/linux-6.8.1/mm/filemap.c$filemap_fdatawait_range$['-EIO']$Check for outstanding write errors,
/home/server/Desktop/kernel/linux-6.8.1/mm/filemap.c$filemap_write_and_wait_range$['-EIO']$Check for outstanding write errors,
/home/server/Desktop/kernel/linux-6.8.1/mm/filemap.c$file_write_and_wait_range$['-EIO']$Check for outstanding write errors,
/home/server/Desktop/kernel/linux-6.8.1/mm/filemap.c$filemap_fdatawait_keep_errors$['-EIO', '-ENOSPC']$Check for outstanding write errors,
/home/server/Desktop/kernel/linux-6.8.1/mm/folio-compat.c$set_page_dirty$['true', 'false']$The function returns true if the page was successfully marked dirty, otherwise it returns false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/folio-compat.c$clear_page_dirty_for_io$['true', 'false']$The function returns true if the dirty flag was successfully cleared, otherwise it returns false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/folio-compat.c$redirty_page_for_writepage$['true', 'false']$The function returns true if the page was successfully redirtied, otherwise it returns false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup.c$try_grab_page$['-ENOMEM']$The function returns -ENOMEM if the page could not be grabbed due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup.c$try_grab_folio$['NULL']$The function returns NULL if the folio could not be grabbed, indicating a failure to increment the refcount.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup.c$try_grab_folio$['NULL']$The function returns NULL if the folio could not be grabbed or pinned, indicating a failure to increment the refcount or pincount.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup.c$try_grab_page$['-ENOMEM', '-EREMOTEIO']$The function returns -ENOMEM if the page could not be grabbed due to insufficient memory, and -EREMOTEIO if the page is a PCI P2P DMA page and FOLL_PCI_P2PDMA is not set.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup_test.c$__gup_test_ioctl$['-EINVAL', '-ENOMEM', '-EINTR']$Returns -EINVAL for invalid commands, -ENOMEM for memory allocation failures, and -EINTR if the mmap lock is interrupted.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup_test.c$pin_longterm_test_start$['-EINVAL', '-EFAULT', '-ENOMEM', '-EINTR']$Returns -EINVAL for invalid arguments, -EFAULT for user copy failures, -ENOMEM for memory allocation failures, and -EINTR if the mmap lock is interrupted.,
/home/server/Desktop/kernel/linux-6.8.1/mm/gup_test.c$pin_longterm_test_read$['-EINVAL', '-EFAULT']$Returns -EINVAL if no pages are pinned, and -EFAULT for user copy failures.,
/home/server/Desktop/kernel/linux-6.8.1/mm/highmem.c$kmap_high$['-EIO']$The function increments the pkmap_count for the mapped page and returns the virtual address. If the page is not already mapped, it calls map_new_virtual to map it, which can return an error code if the mapping fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/highmem.c$kunmap_high$['-EIO']$The function decrements the pkmap_count for the unmapped page. If the count goes to zero, it indicates an error condition, which is not explicitly handled but could lead to an error state.,
/home/server/Desktop/kernel/linux-6.8.1/mm/highmem.c$zero_user_segments$['-EIO']$The function uses kmap_local_page to map the page segments and then zeros them out. If kmap_local_page fails, it could return an error code, though this is not explicitly checked in the function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hmm.c$hmm_vma_fault$['-EPERM', '-EFAULT', '-EBUSY']$Returns -EPERM if write fault is requested but the VMA does not allow writing. Returns -EFAULT if a page fault error occurs. Returns -EBUSY after page fault.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hmm.c$hmm_vma_walk_hole$['-EFAULT']$Returns -EFAULT if a fault is required but the walk does not have a valid VMA.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hmm.c$hmm_vma_handle_pte$['-EFAULT', '-EBUSY']$Returns -EFAULT if a fault is required for a non-present PTE. Returns -EBUSY if a migration entry is encountered and needs to wait.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hmm.c$hmm_vma_walk_pmd$['-EBUSY', '-EFAULT']$Returns -EBUSY if a PMD migration entry is encountered and needs to wait. Returns -EFAULT if a fault is required for a non-present PMD.,
/home/server/Desktop/kernel/linux-6.8.1/mm/huge_memory.c$mm_get_huge_zero_page$['NULL']$The function returns NULL if the huge zero page is not available.,
/home/server/Desktop/kernel/linux-6.8.1/mm/huge_memory.c$get_huge_zero_page$['false']$The function returns false if the allocation of the huge zero page fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/huge_memory.c$alloc_pages$['NULL']$The function returns NULL if the allocation fails due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_cgroup.c$hugetlb_cgroup_css_alloc$['-ENOMEM']$The function returns -ENOMEM if memory allocation for the hugetlb cgroup fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_cgroup.c$hugetlb_cgroup_charge_cgroup$['-ENOMEM']$The function returns -ENOMEM if the page charge to the cgroup fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_cgroup.c$hugetlb_cgroup_charge_cgroup_rsvd$['-ENOMEM']$The function returns -ENOMEM if the reserved page charge to the cgroup fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_vmemmap.c$vmemmap_split_pmd$['-ENOMEM']$The function returns -ENOMEM if pte_alloc_one_kernel fails to allocate a new page table.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_vmemmap.c$vmemmap_pmd_entry$['-ENOTSUPP']$The function returns -ENOTSUPP if the vmemmap page is self-hosted and CONFIG_MEMORY_HOTPLUG is enabled.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_vmemmap.c$vmemmap_remap_free$['-ENOMEM']$The function returns -ENOMEM if alloc_pages_node fails to allocate a new head vmemmap page.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hugetlb_vmemmap.c$alloc_vmemmap_page_list$['-ENOMEM']$The function returns -ENOMEM if alloc_pages_node fails to allocate a page during the loop.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.c$hwpoison_inject$['-EPERM', '-ENXIO', '0']$The function returns -EPERM if the user does not have administrative privileges, -ENXIO if the pfn is not valid, and 0 if the page is not eligible for poisoning or if the memory failure injection is not supported.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.c$hwpoison_unpoison$['-EPERM']$The function returns -EPERM if the user does not have administrative privileges.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.c$pfn_inject_init$['0']$The function returns 0 to indicate successful initialization.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.mod.c$hwpoison_filter_dev_major$['-EIO']$The function returns -EIO in case of an I/O error, which is a standard error code in the Linux kernel.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.mod.c$hwpoison_filter_dev_minor$['-ENOMEM']$The function returns -ENOMEM if there is a failure due to insufficient memory, which is a standard error code in the Linux kernel.,
/home/server/Desktop/kernel/linux-6.8.1/mm/hwpoison-inject.mod.c$hwpoison_filter_flags_mask$['-EFAULT']$The function returns -EFAULT if there is a failure due to a bad address, which is a standard error code in the Linux kernel.,
/home/server/Desktop/kernel/linux-6.8.1/mm/init-mm.c$setup_initial_init_mm$[]$This function does not return any error values as it is a void function and does not perform any operations that would result in an error condition.,
/home/server/Desktop/kernel/linux-6.8.1/mm/interval_tree.c$vma_interval_tree_insert_after$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/interval_tree.c$anon_vma_interval_tree_insert$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/interval_tree.c$anon_vma_interval_tree_remove$[]$This function does not return any error values as it is a void function.,
/home/server/Desktop/kernel/linux-6.8.1/mm/io-mapping.c$io_mapping_map_user$['-EINVAL']$The function returns -EINVAL if the VMA flags do not match the expected flags, indicating an invalid argument.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ioremap.c$generic_ioremap_prot$['NULL']$The function returns NULL if the slab allocator is not available, if the size is zero or if the last address wraps around, or if the vm area allocation or page range mapping fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ioremap.c$ioremap_prot$['NULL']$This function simply calls generic_ioremap_prot and returns its result, thus inheriting its error handling which includes returning NULL on failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ioremap.c$generic_iounmap$[]$This function does not return any error values as it is void and does not handle errors in a way that it would return a specific value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ioremap.c$iounmap$[]$This function simply calls generic_iounmap and does not handle errors in a way that it would return a specific value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/khugepaged.c$hugepage_madvise$['-EINVAL']$The function returns -EINVAL if the advice is not recognized or if the VMA is not suitable for the specified advice.,
/home/server/Desktop/kernel/linux-6.8.1/mm/khugepaged.c$khugepaged_init$['-ENOMEM']$The function returns -ENOMEM if it fails to create the mm_slot cache due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/khugepaged.c$collapse_huge_page$['-EAGAIN', '-ENOMEM', '-EINVAL']$The function returns -EAGAIN if it fails to lock a page or isolate it from the LRU list. It returns -ENOMEM if it fails to allocate a huge page. It returns -EINVAL for other intrinsic errors.,
/home/server/Desktop/kernel/linux-6.8.1/mm/kmemleak.c$kmemleak_alloc$['-EEXIST']$Returns -EEXIST if the object cannot be inserted into the object search tree due to overlapping with an existing object.,
/home/server/Desktop/kernel/linux-6.8.1/mm/kmemleak.c$kmemleak_free$['-EINVAL']$Returns -EINVAL if the object to be freed is unknown or not registered.,
/home/server/Desktop/kernel/linux-6.8.1/mm/kmemleak.c$kmemleak_free_part$['-EINVAL']$Returns -EINVAL if the object to be partially freed is unknown or not registered.,
/home/server/Desktop/kernel/linux-6.8.1/mm/kmemleak.c$kmemleak_free_percpu$['-EINVAL']$Returns -EINVAL if the __percpu object to be freed is unknown or not registered.,
/home/server/Desktop/kernel/linux-6.8.1/mm/kmemleak.c$kmemleak_vmalloc$['-EEXIST']$Returns -EEXIST if the object cannot be inserted into the object search tree due to overlapping with an existing object.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ksm.c$break_ksm$['-ENOMEM']$The function may fail with -ENOMEM if the fault fails with VM_FAULT_OOM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ksm.c$replace_page$['-EFAULT']$The function may return -EFAULT if it fails to replace the page due to various reasons such as invalid VMA or page mapping issues.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ksm.c$try_to_merge_one_page$['-EFAULT']$The function may return -EFAULT if it fails to merge the page due to write protection or dirty page issues.,
/home/server/Desktop/kernel/linux-6.8.1/mm/list_lru.c$list_lru_add$['true', 'false']$The function returns true if the item is successfully added to the list, and false otherwise.,
/home/server/Desktop/kernel/linux-6.8.1/mm/list_lru.c$list_lru_del$['true', 'false']$The function returns true if the item is successfully deleted from the list, and false otherwise.,
/home/server/Desktop/kernel/linux-6.8.1/mm/list_lru.c$list_lru_count_one$['0']$The function returns the count of items in the list, which is always a non-negative number. If the count is negative, it is corrected to 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/maccess.c$copy_from_kernel_nofault$['-ERANGE', '-EFAULT']$Returns -ERANGE if the source is not allowed to be accessed, and -EFAULT if a kernel fault occurs during the copy operation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/maccess.c$copy_to_kernel_nofault$['-EFAULT']$Returns -EFAULT if a kernel fault occurs during the copy operation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/maccess.c$strncpy_from_kernel_nofault$['-ERANGE', '-EFAULT']$Returns -ERANGE if the source is not allowed to be accessed, and -EFAULT if a kernel fault occurs during the copy operation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/maccess.c$copy_from_user_nofault$['-EFAULT']$Returns -EFAULT if a kernel fault occurs during the copy operation or if the access is not okay.,
/home/server/Desktop/kernel/linux-6.8.1/mm/maccess.c$copy_to_user_nofault$['-EFAULT']$Returns -EFAULT if a kernel fault occurs during the copy operation or if the access is not okay.,
/home/server/Desktop/kernel/linux-6.8.1/mm/madvise.c$anon_vma_name_alloc$['NULL']$The function returns NULL if kmalloc fails to allocate memory for the anon_vma_name structure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/madvise.c$replace_anon_vma_name$['-EINVAL']$The function returns -EINVAL if anon_name is provided but the configuration does not support ANON_VMA_NAME.,
/home/server/Desktop/kernel/linux-6.8.1/mm/madvise.c$madvise_update_vma$['PTR_ERR(vma)']$The function returns PTR_ERR(vma) if vma_modify_flags_name fails and returns an error pointer.,
/home/server/Desktop/kernel/linux-6.8.1/mm/madvise.c$madvise_willneed$['-EBADF']$The function returns -EBADF if the vma does not have a valid file associated with it.,
/home/server/Desktop/kernel/linux-6.8.1/mm/madvise.c$madvise_cold$['-EINVAL']$The function returns -EINVAL if the vma cannot be madvised to be cold due to its flags.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_pte$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$clean_record_pte$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_clean_pmd_entry$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_clean_pud_entry$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_clean_pre_vma$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_clean_post_vma$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mapping_dirty_helpers.c$wp_clean_test_walk$[]$This function does not return any error values as it always returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memblock.c$memblock_add_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for resizing the memblock regions array.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memblock.c$memblock_remove_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for resizing the memblock regions array during the isolation process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memblock.c$memblock_phys_alloc_range$['0']$The function returns 0 if it fails to find a suitable memory block within the specified range.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memfd.c$memfd_wait_for_pins$['-EBUSY']$The function returns -EBUSY if, after the last scan, it still finds pages that are pinned, indicating that the operation cannot proceed due to ongoing I/O operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memfd.c$memfd_add_seals$['-EPERM', '-EINVAL', '-EBUSY']$The function returns -EPERM if the file mode does not allow writing or if the file is already sealed against further sealing. It returns -EINVAL if the file type does not support sealing or if an invalid seal is requested. It returns -EBUSY if it cannot make the mapping unwritable due to pinned pages.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memfd.c$memfd_get_seals$['-EINVAL']$The function returns -EINVAL if the file type does not support sealing, indicating that the operation is invalid for that file type.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memfd.c$memfd_fcntl$['-EINVAL']$The function returns -EINVAL if an unsupported command is passed to it, indicating that the command is not valid for memfd operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memfd.c$check_sysctl_memfd_noexec$['-EACCES']$The function returns -EACCES if the sysctl policy enforces MFD_NOEXEC_SEAL and the flags do not comply, indicating that access is denied due to policy restrictions.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$hwpoison_filter_dev$['-EINVAL']$Returns -EINVAL if the device major or minor number does not match the filter criteria.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$hwpoison_filter_flags$['-EINVAL']$Returns -EINVAL if the page flags do not match the filter criteria.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$hwpoison_filter_task$['-EINVAL']$Returns -EINVAL if the task's memory cgroup does not match the filter criteria.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$hwpoison_filter$['-EINVAL']$Returns -EINVAL if any of the filter criteria (device, flags, task) do not match.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$kill_proc$['-EFAULT']$Returns -EFAULT if the signal sending operation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$try_to_split_thp_page$['-EBUSY']$Returns -EBUSY if the THP split operation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$get_hwpoison_page$['-EIO', '-EBUSY', '-EHWPOISON']$Returns -EIO if the page is unhandlable, -EBUSY if there is a race condition, and -EHWPOISON if the page is already poisoned and taken off from buddy.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-failure.c$memory_failure$['-EOPNOTSUPP', '-ENXIO', '-EBUSY', '-EHWPOISON']$Returns -EOPNOTSUPP if the error event is filtered, -ENXIO if the page is outside kernel control, -EBUSY if the page is busy, and -EHWPOISON if the page is already poisoned.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory_hotplug.c$set_memmap_mode$['-EINVAL', '0']$The function returns -EINVAL if the input value is not recognized, and 0 if the mode is successfully set.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory_hotplug.c$get_memmap_mode$['0']$The function returns 0 on success, indicating that the buffer has been filled with the current mode.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory_hotplug.c$register_memory_resource$['-E2BIG', '-EEXIST']$The function returns -E2BIG if the memory range exceeds the maximum allowed size, and -EEXIST if the memory region is already reserved.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-tiers.c$find_create_memory_tier$['-EINVAL', '-ENOMEM']$The function returns -EINVAL if the memory type is already part of a memory tier but no matching tier is found, indicating an inconsistency. It returns -ENOMEM if memory allocation for a new memory tier fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-tiers.c$set_node_memory_tier$['-EINVAL']$The function returns -EINVAL if the node is not in the N_MEMORY state, indicating that the node is not a valid memory node.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memory-tiers.c$mt_set_default_dram_perf$['-EIO', '-EINVAL']$The function returns -EIO if there was a previous error in setting the default DRAM performance. It returns -EINVAL if the provided performance data is invalid or if it significantly differs from the previously set default performance.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempolicy.c$numa_nearest_node$['-EINVAL']$Returns -EINVAL if the provided state is not within the valid range of node states.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempolicy.c$mpol_new_nodemask$['-EINVAL']$Returns -EINVAL if the nodes parameter is empty, indicating an invalid input.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempolicy.c$mpol_new_preferred$['-EINVAL']$Returns -EINVAL if the nodes parameter is empty, indicating an invalid input.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempool.c$mempool_init_node$['-ENOMEM']$Returns -ENOMEM if kmalloc_array_node fails to allocate memory for pool elements.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempool.c$mempool_create_node$['-ENOMEM']$Returns NULL and sets -ENOMEM if kzalloc_node fails to allocate memory for the pool structure or if mempool_init_node fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mempool.c$mempool_resize$['-ENOMEM']$Returns -ENOMEM if kmalloc_array fails to allocate memory for new elements during the resizing process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memremap.c$pagemap_range$['-EINVAL', '-ENOMEM', '-ENXIO']$The function returns -EINVAL for invalid configurations, -ENOMEM for memory allocation failures, and -ENXIO for attempting to map regions that intersect with existing system RAM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memremap.c$memremap_pages$['-EINVAL']$The function returns -EINVAL for invalid configurations or unsupported memory types.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memremap.c$devm_memremap_pages$['-EINVAL']$The function returns -EINVAL for invalid configurations or when adding an action to the device fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memtest.c$parse_memtest$['-EINVAL']$The function returns -EINVAL if the conversion of the argument to an unsigned integer fails, indicating an invalid argument.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memtest.c$early_memtest$[]$This function does not return any error values directly. It operates based on the memtest_pattern and does not have a return value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/memtest.c$memtest_report_meminfo$[]$This function does not return any error values. It is a reporting function that outputs information to a seq_file and does not have a return value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate.c$isolate_movable_page$['false', '-EIO']$The function returns false if the page cannot be isolated due to conditions like being under __free_pages() or being a slab page. It returns -EIO if the page is already isolated or if the page lock cannot be acquired.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate.c$putback_movable_folio$['false']$The function does not return any error values. It simply performs the necessary operations to put the folio back into its original state.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate.c$remove_migration_pte$['false']$The function does not return any error values. It performs the necessary operations to restore the PTE to its working state.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate_device.c$migrate_vma_collect_pmd$['-EBUSY', '-ENOMEM']$The function checks for pmd_trans_huge and handles splitting huge pages, which can return -EBUSY if the page is locked. Additionally, pte_offset_map_lock can fail and return NULL, which is treated as an error, though the exact error code is not specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate_device.c$migrate_vma_unmap$['-EBUSY']$The function calls migrate_device_unmap which in turn calls isolate_lru_page, which can fail and return -EBUSY if the page is pinned or cannot be isolated.,
/home/server/Desktop/kernel/linux-6.8.1/mm/migrate_device.c$migrate_vma_insert_page$['-ENOMEM']$The function allocates new pte entries and handles mapping the new page, which can fail due to memory allocation issues, typically resulting in -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mincore.c$do_mincore$['-ENOMEM', '-EAGAIN']$The function returns -ENOMEM if the vma lookup fails, indicating that the address range is invalid for the address space. It returns -EAGAIN if the temporary buffer allocation fails, indicating a temporary kernel resource unavailability.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mincore.c$mincore_pte_range$['-EAGAIN']$The function sets the walk action to ACTION_AGAIN if pte_offset_map_lock fails, which is a temporary condition that might resolve on a retry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mincore.c$SYSCALL_DEFINE3(mincore, unsigned long, start, size_t, len, unsigned char __user *, vec)$['-EINVAL', '-ENOMEM', '-EFAULT', '-EAGAIN']$The function returns -EINVAL if the start address is not page-aligned, -ENOMEM if the address range is invalid or specifies unmapped pages, -EFAULT if the vec pointer is illegal, and -EAGAIN if the temporary buffer allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mlock.c$can_do_mlock$['true', 'false']$The function returns true if the process has the necessary capabilities or if the resource limit allows it; otherwise, it returns false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mlock.c$mlock_folio$['-ENOMEM']$The function increments the mlock count for the folio and updates statistics. If the folio is already mlocked, it does nothing, but if there is an error in setting the mlock flag, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mlock.c$munlock_folio$['-ENOMEM']$The function decrements the mlock count for the folio and updates statistics. If the folio is not mlocked, it does nothing, but if there is an error in clearing the mlock flag, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap.c$check_brk_limits$['-EAGAIN']$Returns -EAGAIN if the future memory allocation would exceed the mlock limits.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap.c$do_brk_flags$['-ENOMEM']$Returns -ENOMEM if the memory allocation fails or if the address space limits are exceeded.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap.c$expand_stack_locked$['-EFAULT', '-ENOMEM']$Returns -EFAULT if the stack cannot be expanded, and -ENOMEM if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap_lock.c$trace_mmap_lock_reg$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the buffers required for tracing.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap_lock.c$free_memcg_path_bufs$[]$This function does not return any error values; it simply performs cleanup operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmap_lock.c$get_memcg_path_buf$['NULL']$The function returns NULL if the buffer is not available, indicating a failure to retrieve the buffer.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mm_init.c$mm_sysfs_init$['-ENOMEM']$The function returns -ENOMEM if it fails to create and add the 'mm' kobject under the kernel kobject.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mm_init.c$cmdline_parse_core$['-EINVAL']$The function returns -EINVAL if the input string is NULL, indicating an invalid argument.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mm_init.c$mm_compute_batch_notifier$['NOTIFY_OK']$The function returns NOTIFY_OK to indicate successful handling of the notification.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_gather.c$tlb_next_batch$['false']$The function returns false if there are delayed rmap operations pending or if the allocation of a new batch fails. This indicates that the batching process cannot proceed due to these constraints.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_gather.c$__tlb_remove_page_size$['true']$The function returns true if starting a new batch fails, indicating that the operation should be retried later due to the inability to proceed with batching.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_gather.c$tlb_remove_table$['false']$The function returns void and does not have a direct error return value. However, it internally handles errors by invalidating the TLB and removing the table individually if batch allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_notifier.c$__mmu_notifier_clear_flush_young$['0', '1']$The function returns 1 if the mapping previously existed and was cleared, and 0 otherwise. These are the only possible return values as per the function's logic.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_notifier.c$__mmu_notifier_clear_young$['0', '1']$The function returns 1 if the mapping previously existed and was cleared, and 0 otherwise. These are the only possible return values as per the function's logic.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmu_notifier.c$__mmu_notifier_test_young$['0', '1']$The function returns 1 if the young bit is set for the specified address, and 0 otherwise. These are the only possible return values as per the function's logic.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmzone.c$next_online_pgdat$['NULL']$The function returns NULL if the next online node ID is MAX_NUMNODES, indicating no more online nodes.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmzone.c$next_zone$['NULL']$The function returns NULL if there are no more zones to iterate over.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mmzone.c$__next_zones_zonelist$['NULL']$The function returns NULL if no suitable zone is found.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mprotect.c$change_pte_range$['-EAGAIN']$The function returns -EAGAIN if pte_offset_map_lock fails to obtain the PTE lock, indicating a temporary resource unavailability.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mprotect.c$change_pmd_prepare$['-ENOMEM']$The function returns -ENOMEM if pte_alloc fails to allocate a new PTE, indicating insufficient memory resources.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mprotect.c$change_prepare$['-ENOMEM']$The function returns -ENOMEM if the allocation of lower-level page table entries fails, indicating insufficient memory resources.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mprotect.c$mprotect_fixup$['-ENOMEM', '-EACCES']$The function returns -ENOMEM if there is insufficient memory to expand the VM area, and -EACCES if the requested protection is not allowed due to architecture or security constraints.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mremap.c$move_ptes$['-EAGAIN']$The function returns -EAGAIN if it fails to map the page table entries due to resource constraints.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mremap.c$move_normal_pmd$['false']$The function returns false if the architecture does not support page table moves or if the destination PMD is already established.,
/home/server/Desktop/kernel/linux-6.8.1/mm/mremap.c$move_normal_pud$['false']$The function returns false if the architecture does not support page table moves or if the destination PUD is already established.,
/home/server/Desktop/kernel/linux-6.8.1/mm/msync.c$SYSCALL_DEFINE3(msync, unsigned long, start, size_t, len, int, flags)$['-EINVAL', '-ENOMEM', '-EBUSY']$The function returns -EINVAL if the flags are invalid, -ENOMEM if there is an unmapped address range, and -EBUSY if the memory region is locked and invalidation is requested.,
/home/server/Desktop/kernel/linux-6.8.1/mm/nommu.c$follow_pfn$['-EINVAL']$The function returns -EINVAL if the VMA does not have the VM_IO or VM_PFNMAP flags set, indicating an invalid operation for the given VMA.,
/home/server/Desktop/kernel/linux-6.8.1/mm/nommu.c$validate_mmap_request$['-EINVAL', '-ENOMEM', '-EOVERFLOW', '-ENODEV', '-EACCES', '-EPERM']$The function returns various error codes based on the validation checks performed on the mmap request, such as invalid flags, insufficient memory, offset overflow, unsupported device, access permissions, and execution permission issues.,
/home/server/Desktop/kernel/linux-6.8.1/mm/nommu.c$do_munmap$['-EINVAL']$The function returns -EINVAL if the chunk to be unmapped is not backed by a single VMA or if the specified address and length are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/oom_kill.c$oom_cpuset_eligible$['true', 'false']$The function returns a boolean value indicating whether the task is eligible for OOM killing based on its cpuset and memory policy.,
/home/server/Desktop/kernel/linux-6.8.1/mm/oom_kill.c$oom_unkillable_task$['true', 'false']$The function returns true if the task is the global init process or a kernel thread, which are considered unkillable by the OOM killer.,
/home/server/Desktop/kernel/linux-6.8.1/mm/oom_kill.c$should_dump_unreclaim_slab$['true', 'false']$The function returns true if the amount of unreclaimable slab memory is greater than the total user memory, indicating a need to dump unreclaimable slabs.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_counter.c$page_counter_set_max$['-EBUSY']$Returns -EBUSY if the current number of pages on the counter already exceeds the specified limit.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_counter.c$page_counter_try_charge$['false']$Returns false if the counter or one of its ancestors has hit its configured limit.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_counter.c$page_counter_memparse$['-EINVAL']$Returns -EINVAL if the input string is not correctly formatted.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_ext.c$alloc_node_page_ext$['-ENOMEM']$The function attempts to allocate memory using memblock_alloc_try_nid, and if the allocation fails, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_ext.c$init_section_page_ext$['-ENOMEM']$The function allocates memory for the extended data using alloc_page_ext, and if the allocation fails, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_ext.c$online_page_ext$['-ENOMEM']$The function attempts to initialize the extended data for sections, and if any initialization fails, it rolls back and returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_idle.c$page_idle_bitmap_read$['-EINVAL']$The function returns -EINVAL if the position or count is not aligned with the bitmap chunk size.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_idle.c$page_idle_bitmap_write$['-EINVAL', '-ENXIO']$The function returns -EINVAL if the position or count is not aligned with the bitmap chunk size, and -ENXIO if the starting pfn is beyond the maximum pfn.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_idle.c$page_idle_init$['-ENOMEM']$The function returns -ENOMEM if there is an error in memory allocation during the sysfs group creation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_io.c$generic_swapfile_activate$['-EINVAL']$The function returns -EINVAL if the swapfile has holes, indicating an invalid swapfile.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_io.c$swap_writepage$['-EIO']$The function returns -EIO if there is an error during the preparation of the page for swap.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_io.c$sio_pool_init$['-ENOMEM']$The function returns -ENOMEM if it fails to create the memory pool due to insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_isolation.c$set_migratetype_isolate$['-EBUSY']$The function returns -EBUSY if the pageblock is already marked as isolated or if unmovable pages are found within the specified range.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_isolation.c$isolate_single_pageblock$['-EBUSY']$The function returns -EBUSY if it fails to isolate the pageblock due to unmovable pages or if the isolation process encounters an error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_isolation.c$start_isolate_page_range$['-EBUSY']$The function returns -EBUSY if any part of the range cannot be isolated, typically due to unmovable pages or overlapping isolation attempts.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_owner.c$early_page_owner_param$['-EINVAL']$The function uses kstrtobool to convert the input string to a boolean, which can return -EINVAL if the conversion fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_owner.c$save_stack$['dummy_handle', 'failure_handle']$If the stack depot save operation fails, the function returns a predefined dummy or failure handle to indicate the error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_owner.c$print_page_owner$['-ENOMEM']$The function allocates a buffer to store the output, and if the allocation fails, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_poison.c$early_page_poison_param$['-EINVAL']$The function kstrtobool can return -EINVAL if the conversion of the string to a boolean fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_poison.c$check_poison_mem$[]$The function does not return any error values; it only logs errors if memory corruption is detected.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_poison.c$unpoison_page$[]$The function does not return any error values; it only performs checks and logs errors if necessary.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_reporting.c$page_order_update_notify$['-EINVAL']$The function uses param_set_uint_minmax which can return -EINVAL if the value provided is out of the specified range.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_reporting.c$page_reporting_cycle$['-EIO']$The function calls prdev->report which is a device-specific reporting function that can return an error code, such as -EIO, indicating an I/O error during the reporting process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_reporting.c$page_reporting_process_zone$['-EIO']$The function calls page_reporting_cycle which can propagate an error code from the device-specific reporting function, such as -EIO.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_reporting.c$page_reporting_process$['-ENOMEM']$The function attempts to allocate a scatterlist using kmalloc_array which can fail and return NULL, leading to an error code of -ENOMEM being set.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_table_check.c$early_page_table_check_param$['-EINVAL']$The function kstrtobool, which is used to convert the string argument to a boolean, returns -EINVAL if the conversion fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_table_check.c$__page_table_check_pte_clear$[]$This function does not return any error values; it only performs operations and checks.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_table_check.c$__page_table_check_pmd_clear$[]$This function does not return any error values; it only performs operations and checks.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_table_check.c$__page_table_check_pud_clear$[]$This function does not return any error values; it only performs operations and checks.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_vma_mapped.c$map_pte$['false']$The function returns false if the PTE mapping fails or if the conditions for migration or device memory are not met.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_vma_mapped.c$check_pte$['false']$The function returns false if the PTE does not match the specified PFN range or if the PTE is not present.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page_vma_mapped.c$check_pmd$['false']$The function returns false if the PFN ranges do not overlap.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pagewalk.c$walk_pte_range_inner$['-EIO', '-ENOMEM']$The function can return errors from the pte_entry callback, which are propagated as the return value of walk_pte_range_inner.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pagewalk.c$walk_pte_range$['-EIO', '-ENOMEM']$The function can return errors from the walk_pte_range_inner call, which are propagated as the return value of walk_pte_range.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pagewalk.c$walk_pmd_range$['-EIO', '-ENOMEM']$The function can return errors from the pmd_entry or pte_hole callbacks, which are propagated as the return value of walk_pmd_range.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page-writeback.c$node_dirtyable_memory$['-ENOMEM']$This function may return -ENOMEM if there is insufficient memory available to perform the calculation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page-writeback.c$global_dirtyable_memory$['-ENOMEM']$This function may return -ENOMEM if there is insufficient memory available to perform the calculation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page-writeback.c$domain_dirty_limits$['-EINVAL']$This function may return -EINVAL if the provided dirty limits are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page-writeback.c$node_dirty_limit$['-ENOMEM']$This function may return -ENOMEM if there is insufficient memory available to perform the calculation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/page-writeback.c$node_dirty_ok$['-EINVAL']$This function may return -EINVAL if the provided dirty limits are invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu.c$pcpu_populate_chunk$['-ENOMEM']$The function attempts to allocate memory for the pages, and if the allocation fails, it returns -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu.c$pcpu_depopulate_chunk$[]$This function does not return any error values as it only performs freeing operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu.c$pcpu_alloc_area$['-1']$The function searches for a fit in the chunk and updates the allocation map. If no matching area is found, it returns -1.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-km.c$pcpu_create_chunk$['NULL']$The function returns NULL if pcpu_alloc_chunk or alloc_pages fails, indicating an allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-km.c$pcpu_verify_alloc_info$['-EINVAL']$The function returns -EINVAL if the allocation info contains more than one group, indicating an invalid configuration.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-stats.c$find_max_nr_alloc$[]$This function does not return any error values as it only calculates and returns an integer value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-stats.c$percpu_stats_show$['-ENOMEM']$The function returns -ENOMEM if the buffer allocation fails using vmalloc_array.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-stats.c$init_percpu_stats_debugfs$[]$This function does not return any error values as it only creates a debugfs file and returns 0.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-vm.c$pcpu_alloc_pages$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a page, indicating insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-vm.c$pcpu_map_pages$['-ENOMEM']$The function returns -ENOMEM if it fails to map pages, indicating insufficient memory or other mapping issues.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-vm.c$pcpu_populate_chunk$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate or map pages, indicating insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/percpu-vm.c$pcpu_get_pages$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the pages array, indicating insufficient memory.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pgtable-generic.c$ptep_set_access_flags$['true', 'false']$The function returns true if the PTE changed, and false otherwise. This is based on the comparison of the current PTE with the new entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pgtable-generic.c$ptep_clear_flush_young$['true', 'false']$The function returns true if the young bit was set and cleared, and false otherwise. This is determined by the result of ptep_test_and_clear_young.,
/home/server/Desktop/kernel/linux-6.8.1/mm/pgtable-generic.c$pmdp_set_access_flags$['true', 'false']$The function returns true if the PMD changed, and false otherwise. This is based on the comparison of the current PMD with the new entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/process_vm_access.c$process_vm_rw_pages$['-EFAULT']$The function returns -EFAULT if the copy operation fails to copy the expected number of bytes, indicating a fault in the memory access.,
/home/server/Desktop/kernel/linux-6.8.1/mm/process_vm_access.c$process_vm_rw_single_vec$['-EFAULT']$The function returns -EFAULT if pin_user_pages_remote fails to pin the required pages, indicating a fault in the memory access.,
/home/server/Desktop/kernel/linux-6.8.1/mm/process_vm_access.c$process_vm_rw_core$['-ENOMEM', '-ESRCH', '-EPERM']$The function returns -ENOMEM if kmalloc fails to allocate memory for the process pages array. It returns -ESRCH if the task cannot be found, and -EPERM if mm_access fails with EACCES, which is mapped to EPERM for this context.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_pgd_entry$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_p4d_entry$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_pud_entry$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_pmd_entry$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_pte_entry$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/ptdump.c$ptdump_hole$[]$This function does not return any error values as specified in the code.,
/home/server/Desktop/kernel/linux-6.8.1/mm/readahead.c$read_pages$['-ENOMEM']$The function may return -ENOMEM if there is insufficient memory to allocate the required pages for reading.,
/home/server/Desktop/kernel/linux-6.8.1/mm/readahead.c$filemap_add_folio$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the folio during the addition process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/readahead.c$ra_alloc_folio$['-ENOMEM']$The function may return -ENOMEM if it fails to allocate the required memory for the folio.,
/home/server/Desktop/kernel/linux-6.8.1/mm/rmap.c$__anon_vma_prepare$['-ENOMEM']$The function allocates memory for anon_vma_chain and anon_vma structures, and returns -ENOMEM if these allocations fail.,
/home/server/Desktop/kernel/linux-6.8.1/mm/rmap.c$anon_vma_clone$['-ENOMEM']$The function allocates memory for anon_vma_chain structures, and returns -ENOMEM if this allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/rmap.c$anon_vma_fork$['-ENOMEM']$The function allocates memory for anon_vma and anon_vma_chain structures, and returns -ENOMEM if these allocations fail.,
/home/server/Desktop/kernel/linux-6.8.1/mm/rodata_test.c$rodata_test$['-EIO', 'true', 'false']$The function checks if the rodata_test_data is read-only by attempting to write to it and expecting a fault. If the write succeeds, it prints an error message, which could be interpreted as a true/false condition based on the success or failure of the write operation. Additionally, if the rodata section is not page-size aligned, it prints an error message, which could be considered as returning -EIO.,
/home/server/Desktop/kernel/linux-6.8.1/mm/secretmem.c$secretmem_fault$['-EINVAL', 'VM_FAULT_OOM', '-EBUSY']$Returns -EINVAL if the offset exceeds the inode size, VM_FAULT_OOM if folio allocation fails, and -EBUSY if the page cannot be migrated.,
/home/server/Desktop/kernel/linux-6.8.1/mm/secretmem.c$secretmem_mmap$['-EINVAL', '-EAGAIN']$Returns -EINVAL if the VM_SHARED or VM_MAYSHARE flags are not set, and -EAGAIN if the memory cannot be locked.,
/home/server/Desktop/kernel/linux-6.8.1/mm/secretmem.c$secretmem_setattr$['-EINVAL']$Returns -EINVAL if the ATTR_SIZE is set and the inode size is non-zero.,
/home/server/Desktop/kernel/linux-6.8.1/mm/secretmem.c$memfd_secret$['-ENOSYS', '-EINVAL', '-ENFILE']$Returns -ENOSYS if secretmem is not enabled, -EINVAL if invalid flags are provided, and -ENFILE if the file limit is reached.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem.c$shmem_inode_acct_blocks$['-ENOSPC']$The function returns -ENOSPC if the accounting of blocks fails due to space constraints.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem.c$shmem_swapin_folio$['-EIO', '-ENOMEM', '-EEXIST', '-EINVAL']$The function can return -EIO if the swap entry is poisoned, -ENOMEM if memory allocation fails, -EEXIST if the folio already exists in the cache, and -EINVAL if the swap entry is invalid.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem.c$shmem_get_folio_gfp$['-EFBIG', '-ENOSPC', '-ENOENT', '-ENOMEM']$The function can return -EFBIG if the index exceeds the maximum file size, -ENOSPC if there is no space for new blocks, -ENOENT if the folio is not found and cannot be allocated, and -ENOMEM if memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem_quota.c$shmem_read_file_info$['-ENOMEM']$Returns -ENOMEM if kzalloc fails to allocate memory for rb_root.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem_quota.c$shmem_free_file_info$['0']$Always returns 0 as it does not handle any errors.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem_quota.c$shmem_get_next_id$['-ESRCH', '-ENOENT']$Returns -ESRCH if quota is not active, and -ENOENT if the next ID is not found in the tree.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem_quota.c$shmem_acquire_dquot$['-ENOMEM']$Returns -ENOMEM if kzalloc fails to allocate memory for a new quota_id entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shmem_quota.c$shmem_release_dquot$['-ENOENT']$Returns -ENOENT if the quota id is not found in the rb tree, which should not normally happen.,
/home/server/Desktop/kernel/linux-6.8.1/mm/show_mem.c$si_mem_available$['0']$The function does not return any error codes; it only returns a positive integer representing available memory or 0 if the available memory is negative.,
/home/server/Desktop/kernel/linux-6.8.1/mm/show_mem.c$si_meminfo$[]$The function does not return any values; it only populates the provided sysinfo structure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/show_mem.c$show_free_areas$[]$The function does not return any values; it only prints memory information to the kernel log.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker.c$alloc_shrinker_info$['-ENOMEM']$The function attempts to allocate memory using kvzalloc_node, and if this fails, it returns -ENOMEM to indicate that memory allocation failed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker.c$expand_one_shrinker_info$['-ENOMEM']$The function allocates memory for new shrinker units using kzalloc_node, and if this fails, it returns -ENOMEM to indicate that memory allocation failed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker.c$expand_shrinker_info$['-ENOMEM']$The function calls expand_one_shrinker_info which can return -ENOMEM if memory allocation for new shrinker units fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker.c$shrinker_memcg_alloc$['-ENOMEM', '-ENOSYS']$The function can return -ENOMEM if memory allocation for new shrinker units fails, and -ENOSYS if memory cgroup is disabled.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker_debug.c$shrinker_debugfs_count_show$['-ENOMEM', '-EINTR']$The function returns -ENOMEM if kcalloc fails to allocate memory for count_per_node. It returns -EINTR if a signal is pending during the iteration over memory cgroups.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker_debug.c$shrinker_debugfs_scan_write$['-EFAULT', '-EINVAL', '-ENOENT']$The function returns -EFAULT if copy_from_user fails to copy data from user space. It returns -EINVAL if the input format is incorrect or if the node ID is out of range. It returns -ENOENT if the memory cgroup is not found or not online.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shrinker_debug.c$shrinker_debugfs_add$['-ENOMEM']$The function returns -ENOMEM if ida_alloc fails to allocate an ID for the shrinker.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shuffle.c$shuffle_param_set$['-EINVAL']$The function returns -EINVAL if the parameter set operation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shuffle.c$shuffle_valid_page$['NULL']$The function returns NULL if any of the validation checks fail.,
/home/server/Desktop/kernel/linux-6.8.1/mm/shuffle.c$shuffle_pick_tail$['true', 'false']$The function returns true or false based on the least significant bit of the random number.,
/home/server/Desktop/kernel/linux-6.8.1/mm/slab_common.c$kmem_cache_sanity_check$['-EINVAL']$The function returns -EINVAL if the name is NULL, the function is called in an interrupt context, or the size exceeds KMALLOC_MAX_SIZE.,
/home/server/Desktop/kernel/linux-6.8.1/mm/slab_common.c$create_cache$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the new cache structure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/slab_common.c$shutdown_cache$['-EBUSY']$The function returns -EBUSY if the cache is still in use and cannot be shut down.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse.c$sparse_index_alloc$['-ENOMEM']$The function returns -ENOMEM if memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse.c$sparse_index_init$['-ENOMEM']$The function returns -ENOMEM if the allocation of a sparse index section fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse.c$memory_present$['-ENOMEM']$The function panics and indirectly returns -ENOMEM if the allocation of mem_section fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_alloc_block$['-ENOMEM']$The function returns NULL if the allocation fails, which is mapped to -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_alloc_block_buf$['-ENOMEM']$The function returns NULL if the allocation fails, which is mapped to -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_populate_address$['-ENOMEM']$The function returns NULL if any of the page table level allocations fail, which is mapped to -ENOMEM.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_populate_range$['-ENOMEM']$The function returns -ENOMEM if any of the page table entries cannot be populated.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_populate_basepages$['-ENOMEM']$The function returns -ENOMEM if the range cannot be populated with base pages.,
/home/server/Desktop/kernel/linux-6.8.1/mm/sparse-vmemmap.c$vmemmap_populate_hugepages$['-ENOMEM']$The function returns -ENOMEM if the range cannot be populated with huge pages.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap.c$put_pages_list$['true', 'false']$The function checks if the folio can be put and if it is a large folio, it handles it accordingly. The return value is based on whether the folio was successfully put or not.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap.c$folio_rotate_reclaimable$['true', 'false']$The function checks the conditions for the folio to be rotated and if all conditions are met, it proceeds with the rotation. The return value indicates whether the rotation was successful.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap.c$lru_note_cost$['true', 'false']$The function updates the cost statistics for the lruvec and decays previous events. The return value is based on whether the statistics were successfully updated.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_cgroup.c$swap_cgroup_prepare$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a page, indicating a memory allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_cgroup.c$swap_cgroup_swapon$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate memory for the swap_cgroup control structures, indicating a memory allocation failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_cgroup.c$swap_cgroup_cmpxchg$['0']$The function returns 0 if the comparison fails, indicating that the old id does not match the expected value.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_cgroup.c$swap_cgroup_record$['0']$The function returns 0 if the recording operation fails, indicating that the old value was not successfully updated.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swapfile.c$discard_swap$['-EOPNOTSUPP']$The function may return -EOPNOTSUPP if the swap device does not support discard operations.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swapfile.c$__try_to_reclaim_swap$['0']$The function returns 0 if the swap entry is freed, indicating success.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swapfile.c$swap_alloc_cluster$['0']$The function returns 0 if no free clusters are available, indicating failure.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_slots.c$alloc_swap_slot_cache$['-ENOMEM']$The function returns -ENOMEM if the allocation of slots or slots_ret fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_slots.c$refill_swap_slots_cache$['0']$The function returns 0 if the swap slots cache is not in use or if no new pages are obtained.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_slots.c$free_swap_slot$['true', 'false']$The function does not return an error code but rather a boolean indicating whether the slot was successfully cached or not.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_state.c$add_to_swap_cache$['-ENOMEM', '-EIO']$The function can fail due to memory allocation issues (-ENOMEM) or I/O errors (-EIO) during the swap cache addition process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_state.c$add_to_swap$['false']$The function returns false if it fails to allocate swap space or add the folio to the swap cache.,
/home/server/Desktop/kernel/linux-6.8.1/mm/swap_state.c$read_swap_cache_async$['-ENOMEM', '-EIO']$The function can fail due to memory allocation issues (-ENOMEM) or I/O errors (-EIO) during the asynchronous swap read process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/truncate.c$truncate_inode_folio$['-EIO']$The function returns -EIO if the folio's mapping does not match the provided mapping, indicating an input error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/truncate.c$generic_error_remove_folio$['-EINVAL', '-EIO']$It returns -EINVAL if the mapping is NULL, indicating an invalid argument. It returns -EIO if the inode mode is not a regular file, indicating an unsupported operation.,
/home/server/Desktop/kernel/linux-6.8.1/mm/truncate.c$mapping_evict_folio$['0']$The function returns 0 if the folio cannot be evicted, which could be due to the folio being dirty, under writeback, or having an elevated refcount.,
/home/server/Desktop/kernel/linux-6.8.1/mm/usercopy.c$check_stack_object$['NOT_STACK', 'BAD_STACK', 'GOOD_STACK']$The function returns specific error codes indicating the position of the object relative to the stack, such as NOT_STACK for objects not on the stack, BAD_STACK for invalid stack positions, and GOOD_STACK for valid stack positions.,
/home/server/Desktop/kernel/linux-6.8.1/mm/usercopy.c$overlaps$['false', 'true']$The function checks for overlap and returns true if there is any overlap, otherwise it returns false.,
/home/server/Desktop/kernel/linux-6.8.1/mm/usercopy.c$check_bogus_address$['true']$The function calls usercopy_abort if the address is invalid, which does not return but rather aborts the operation, thus effectively returning true for error conditions.,
/home/server/Desktop/kernel/linux-6.8.1/mm/userfaultfd.c$mfill_atomic_install_pte$['-EAGAIN', '-EFAULT', '-EEXIST']$The function returns -EAGAIN if it fails to obtain the PTE lock, -EFAULT if the destination address is outside the file's size, and -EEXIST if the PTE is not empty.,
/home/server/Desktop/kernel/linux-6.8.1/mm/userfaultfd.c$mfill_atomic_pte_copy$['-ENOMEM', '-ENOENT']$The function returns -ENOMEM if it fails to allocate a new page, and -ENOENT if the copy operation fails due to a user fault.,
/home/server/Desktop/kernel/linux-6.8.1/mm/userfaultfd.c$mfill_atomic_pte_zeropage$['-EAGAIN', '-EFAULT', '-EEXIST']$The function returns -EAGAIN if it fails to obtain the PTE lock, -EFAULT if the destination address is outside the file's size, and -EEXIST if the PTE is not empty.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$kstrdup$['NULL']$The function returns NULL if the input string is NULL or if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$kstrndup$['NULL']$The function returns NULL if the input string is NULL or if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$kmemdup$['NULL']$The function returns NULL if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$kvmemdup$['NULL']$The function returns NULL if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$kmemdup_nul$['NULL']$The function returns NULL if the input string is NULL or if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$memdup_user$['ERR_PTR(-ENOMEM)', 'ERR_PTR(-EFAULT)']$The function returns ERR_PTR(-ENOMEM) if the memory allocation fails and ERR_PTR(-EFAULT) if the copy from user space fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$vmemdup_user$['ERR_PTR(-ENOMEM)', 'ERR_PTR(-EFAULT)']$The function returns ERR_PTR(-ENOMEM) if the memory allocation fails and ERR_PTR(-EFAULT) if the copy from user space fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$strndup_user$['ERR_PTR(-EFAULT)', 'ERR_PTR(-EINVAL)']$The function returns ERR_PTR(-EFAULT) if the length calculation fails and ERR_PTR(-EINVAL) if the length exceeds the maximum allowed.,
/home/server/Desktop/kernel/linux-6.8.1/mm/util.c$memdup_user_nul$['ERR_PTR(-ENOMEM)', 'ERR_PTR(-EFAULT)']$The function returns ERR_PTR(-ENOMEM) if the memory allocation fails and ERR_PTR(-EFAULT) if the copy from user space fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmalloc.c$vmap_pte_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a new PTE entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmalloc.c$vmap_pmd_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a new PMD entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmalloc.c$vmap_pud_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a new PUD entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmalloc.c$vmap_p4d_range$['-ENOMEM']$The function returns -ENOMEM if it fails to allocate a new P4D entry.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmpressure.c$vmpressure_register_event$['-ENOMEM', '-EINVAL']$The function returns -ENOMEM if memory allocation fails for the event structure, and -EINVAL if the provided arguments cannot be parsed correctly.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmpressure.c$vmpressure_unregister_event$[]$This function does not return any error values; it simply removes the eventfd from the notification list.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmpressure.c$vmpressure_prio$[]$This function does not return any error values; it only updates the vmpressure information based on the priority level.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmstat.c$sysctl_vm_numa_stat_handler$['-EFAULT']$The function returns -EFAULT if the proc_dointvec_minmax call fails, indicating a fault during the buffer handling.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmstat.c$calculate_pressure_threshold$['-EINVAL']$The function returns -EINVAL if the calculated threshold is invalid, ensuring the threshold is within acceptable bounds.,
/home/server/Desktop/kernel/linux-6.8.1/mm/vmstat.c$calculate_normal_threshold$['-EINVAL']$The function returns -EINVAL if the calculated threshold is invalid, ensuring the threshold is within acceptable bounds.,
/home/server/Desktop/kernel/linux-6.8.1/mm/workingset.c$workingset_eviction$['-EINVAL']$The function checks for invalid conditions such as the folio being on the LRU list or having a reference count, which would be unexpected and could indicate an error state.,
/home/server/Desktop/kernel/linux-6.8.1/mm/workingset.c$workingset_test_recent$['false']$The function returns false if the shadow entry is not for a recently evicted folio, indicating that the refault distance is too large or the memcg has been deleted.,
/home/server/Desktop/kernel/linux-6.8.1/mm/workingset.c$workingset_refault$['-ENOMEM']$The function may return -ENOMEM if the system is out of memory and cannot allocate necessary resources during the refault process.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.c$z3fold_alloc$['-EINVAL', '-ENOMEM']$Returns -EINVAL if the size or gfp arguments are invalid, and -ENOMEM if the pool was unable to allocate a new page.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.c$z3fold_free$[]$This function does not return errors but handles the freeing of the allocation internally.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.c$z3fold_map$[]$This function does not return errors but returns a pointer to the mapped allocation or NULL if the mapping fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.c$z3fold_unmap$[]$This function does not return errors but handles the unmapping of the allocation internally.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.c$z3fold_get_pool_size$[]$This function does not return errors but returns the size in pages of the given pool.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.mod.c$kmalloc_trace$['-ENOMEM']$The function returns -ENOMEM if the memory allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.mod.c$kmem_cache_create$['-ENOMEM']$The function returns -ENOMEM if there is insufficient memory to create the cache.,
/home/server/Desktop/kernel/linux-6.8.1/mm/z3fold.mod.c$alloc_workqueue$['-ENOMEM']$The function returns -ENOMEM if the allocation of the workqueue fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zbud.c$zbud_create_pool$['NULL']$The function returns NULL if the metadata allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zbud.c$zbud_alloc$['-EINVAL', '-ENOSPC', '-ENOMEM']$The function returns -EINVAL if the size or gfp arguments are invalid, -ENOSPC if the requested size is too large, and -ENOMEM if the pool was unable to allocate a new page.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zbud.c$zbud_zpool_malloc$['-EINVAL', '-ENOSPC', '-ENOMEM']$The function returns -EINVAL if the size or gfp arguments are invalid, -ENOSPC if the requested size is too large, and -ENOMEM if the pool was unable to allocate a new page.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zpool.c$zpool_unregister_driver$['-EBUSY']$The function returns -EBUSY if the driver is still in use (refcount > 0), indicating that the driver cannot be unregistered at this time.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zpool.c$zpool_has_pool$['false']$The function returns false if the driver is not found or could not be loaded, indicating that the requested pool type is not available.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zpool.c$zpool_create_pool$['NULL']$The function returns NULL if the driver is not found, the zpool structure cannot be allocated, or the pool creation fails, indicating a failure to create the zpool.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zsmalloc.c$create_cache$['1']$Returns 1 if either handle_cachep or zspage_cachep allocation fails, indicating an error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zsmalloc.c$cache_alloc_handle$['0']$Returns 0 if the handle allocation fails, indicating an error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zsmalloc.c$cache_alloc_zspage$['0']$Returns 0 if the zspage allocation fails, indicating an error.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zsmalloc.c$zs_malloc$['-EINVAL', '-ENOSPC', '-ENOMEM']$Returns an error pointer with -EINVAL if size is zero, -ENOSPC if size exceeds ZS_MAX_ALLOC_SIZE, and -ENOMEM if handle or zspage allocation fails.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zsmalloc.c$zs_free$[]$No error return values; it handles freeing the object and updating the zspage's fullness group.,
/home/server/Desktop/kernel/linux-6.8.1/mm/zswap.c$zswap_writeback_entry$['-ENOMEM', '-EEXIST']$The function can fail due to memory allocation issues (-ENOMEM) or finding an existing folio in the swap cache (-EEXIST).,
/home/server/Desktop/kernel/linux-6.8.1/mm/zswap.c$zswap_store$['-ENOMEM', '-ENOSPC', '-EAGAIN']$The function can fail due to memory allocation issues (-ENOMEM), running out of space in the zpool (-ENOSPC), or needing to reclaim space (-EAGAIN).,
/home/server/Desktop/kernel/linux-6.8.1/mm/zswap.c$zswap_load$['false']$The function returns false if it fails to find the entry in the zswap cache, indicating that the folio was not stored in zswap.,